{"version":3,"sources":["page-sections/uko-projects/ProjectCard2.jsx","pages/projects/project-v2.jsx","components/input-fields/AppTextField.jsx","components/flexbox/FlexRowAlign.jsx","components/input-fields/SearchInput.jsx","components/AppModal.jsx","icons/DeleteIcon.jsx","../node_modules/@mui/material/Stack/Stack.js","icons/PencilIcon.jsx","components/MoreOptions.jsx","../node_modules/@mui/icons-material/esm/Add.js","../node_modules/@mui/icons-material/esm/MoreHoriz.js","../node_modules/@mui/material/AvatarGroup/avatarGroupClasses.js","../node_modules/@mui/material/AvatarGroup/AvatarGroup.js","../node_modules/@mui/x-date-pickers/DatePicker/shared.js","../node_modules/@mui/x-date-pickers/DatePicker/datePickerToolbarClasses.js","../node_modules/@mui/x-date-pickers/DatePicker/DatePickerToolbar.js","../node_modules/@mui/x-date-pickers/DesktopDatePicker/DesktopDatePicker.js","../node_modules/@mui/x-date-pickers/MobileDatePicker/MobileDatePicker.js","../node_modules/@mui/x-date-pickers/DatePicker/DatePicker.js","icons/ImageUploadIcon.jsx","components/input-fields/ImageUploadInput.jsx","page-sections/uko-projects/CreateProject.jsx"],"names":["ProjectCard2","handleMoreClick","navigate","useNavigate","Card","sx","padding","FlexBetween","IconButton","onClick","MoreHoriz","Box","textAlign","pt","pb","cursor","color","fontWeight","mt","py","LinearProgress","variant","value","FlexBox","alignItems","gap","AvatarGroup","AppAvatar","alt","src","Button","Add","fontSize","marginLeft","borderRadius","backgroundColor","TopAreaWrapper","styled","theme","display","justifyContent","flexWrap","breakpoints","down","paddingTop","StyledTabList","TabList","marginRight","paddingLeft","paddingRight","borderBottom","borderColor","palette","divider","text","primary","maxWidth","between","tabItems","title","amount","UkoProjectV2","useState","setValue","openModal","setOpenModal","downSM","useMediaQuery","projectMoreEl","setProjectMoreEl","handleProjectMoreOpen","event","currentTarget","filterList","filter","item","paddingBottom","TabContext","onChange","_","newValue","map","Tab","disableRipple","split","join","toLowerCase","label","Grid","container","spacing","xs","SearchInput","bordered","placeholder","marginBottom","fullWidth","startIcon","CreateProject","open","setOpen","index","sm","md","MoreOptions","anchorEl","handleMoreClose","StyledTextField","TextField","height","action","disabled","hover","width","AppTextField","props","FlexRowAlign","children","StyledInputBase","InputBase","background","paper","border","icon_style","startAdornment","Wrapper","top","left","position","transform","lightTheme","default","AppModal","handleClose","onClose","DeleteIcon","viewBox","d","fill","_excluded","joinChildren","separator","childrenArray","React","toArray","Boolean","reduce","output","child","push","length","key","StackRoot","name","slot","overridesResolver","styles","root","ownerState","_extends","flexDirection","handleBreakpoints","resolveBreakpointValues","values","direction","propValue","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","forEach","previousDirectionValue","deepmerge","margin","row","column","getValue","mergeBreakpointsInOrder","Stack","inProps","ref","themeProps","useThemeProps","extendSxProp","component","other","_objectWithoutPropertiesLoose","_jsx","as","PencilIcon","createSvgIcon","getAvatarGroupUtilityClass","generateUtilityClass","avatarGroupClasses","generateUtilityClasses","SPACINGS","small","medium","AvatarGroupRoot","avatar","avatarClasses","vars","boxSizing","AvatarGroupAvatar","Avatar","_slotProps$additional","childrenProp","className","componentsProps","max","slotProps","total","clampedMax","classes","composeClasses","useUtilityClasses","totalAvatars","Math","min","maxAvatars","extraAvatars","undefined","additionalAvatarSlotProps","additionalAvatar","_jsxs","clsx","style","slice","reverse","isYearOnlyView","views","isYearAndMonthViews","indexOf","useDatePickerDefaultizedProps","_themeProps$views","utils","useUtils","defaultDates","useDefaultDates","openTo","disableFuture","disablePast","inputFormat","formats","year","disableMaskedInput","monthAndYear","keyboardDate","getFormatAndMaskByViews","minDate","parseNonNullablePickerDate","maxDate","datePickerValueManager","emptyValue","getTodayValue","date","parseInput","parsePickerInputValue","areValuesEqual","a","b","isEqual","getDatePickerToolbarUtilityClass","DatePickerToolbarRoot","PickersToolbar","DatePickerToolbarTitle","Typography","isLandscape","DatePickerToolbar","parsedValue","isMobileKeyboardViewOpen","toggleMobileKeyboardView","toolbarFormat","toolbarPlaceholder","toolbarTitleProp","toolbarTitle","localeText","useLocaleText","datePickerDefaultToolbarTitle","dateText","formatByString","format","test","getCurrentLocaleCode","align","DesktopDatePicker","validationError","useDateValidation","usePickerState","pickerProps","inputProps","wrapperProps","PopperProps","PaperProps","ToolbarComponent","TransitionComponent","components","AllDateInputProps","DesktopWrapper","DateInputProps","KeyboardDateInputComponent","KeyboardDateInput","CalendarOrClockPicker","autoFocus","MobileDatePicker","MobileWrapper","PureDateInputComponent","PureDateInput","DatePicker","desktopModeMediaQuery","DialogProps","defaultMatches","ImageUploadIcon","SvgIcon","ImageUploadInput","handleOnChange","htmlFor","type","accept","id","minHeight","StyledAppModal","Date","setDate","mb","size","renderInput","params","rows","multiline","my"],"mappings":"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","file":"static/js/39.2851b775.chunk.js","sourcesContent":["import { Add, MoreHoriz } from \"@mui/icons-material\";\r\nimport { AvatarGroup, Box, Button, Card, IconButton, LinearProgress } from \"@mui/material\";\r\nimport AppAvatar from \"components/avatars/AppAvatar\";\r\nimport FlexBetween from \"components/flexbox/FlexBetween\";\r\nimport FlexBox from \"components/flexbox/FlexBox\";\r\nimport { H3, H6, Paragraph, Small } from \"components/Typography\";\r\nimport { useNavigate } from \"react-router-dom\"; // component interface props\r\n\r\nconst ProjectCard2 = ({\r\n  handleMoreClick\r\n}) => {\r\n  const navigate = useNavigate();\r\n  return <Card sx={{\r\n    padding: 2\r\n  }}>\r\n      <FlexBetween>\r\n        <Small>July 2, 2020</Small>\r\n        <IconButton sx={{\r\n        padding: 0\r\n      }} onClick={handleMoreClick}>\r\n          <MoreHoriz />\r\n        </IconButton>\r\n      </FlexBetween>\r\n\r\n      <Box sx={{\r\n      textAlign: \"center\",\r\n      pt: 6,\r\n      pb: 4,\r\n      cursor: \"pointer\"\r\n    }} onClick={() => navigate(\"/dashboards/project-details\")}>\r\n        <H3>Web Designing</H3>\r\n        <H6 color=\"text.secondary\" fontWeight={500} mt={0.5}>\r\n          Prototyping\r\n        </H6>\r\n      </Box>\r\n\r\n      <FlexBetween py={1}>\r\n        <Paragraph fontWeight={600}>Project Progress</Paragraph>\r\n        <Paragraph fontWeight={600}>32%</Paragraph>\r\n      </FlexBetween>\r\n\r\n      <LinearProgress variant=\"determinate\" value={32} />\r\n\r\n      <FlexBetween pt=\"1.5rem\">\r\n        <FlexBox alignItems=\"center\" gap={1}>\r\n          <AvatarGroup>\r\n            <AppAvatar alt=\"Remy Sharp\" src=\"/static/avatar/001-man.svg\" />\r\n            <AppAvatar alt=\"Travis Howard\" src=\"/static/avatar/002-girl.svg\" />\r\n          </AvatarGroup>\r\n\r\n          <Button variant=\"dashed\">\r\n            <Add fontSize=\"small\" sx={{\r\n            color: \"grey.600\"\r\n          }} />\r\n          </Button>\r\n        </FlexBox>\r\n\r\n        <Small sx={{\r\n        marginLeft: 1,\r\n        padding: \"5px 15px\",\r\n        borderRadius: \"20px\",\r\n        color: \"text.secondary\",\r\n        backgroundColor: \"action.hover\"\r\n      }}>\r\n          3 Weeks Left\r\n        </Small>\r\n      </FlexBetween>\r\n    </Card>;\r\n};\r\n\r\nexport default ProjectCard2;","import { Add } from \"@mui/icons-material\";\r\nimport { TabContext, TabList } from \"@mui/lab\";\r\nimport { Box, Button, Card, Grid, styled, Tab, useMediaQuery } from \"@mui/material\";\r\nimport FlexBox from \"components/flexbox/FlexBox\";\r\nimport SearchInput from \"components/input-fields/SearchInput\";\r\nimport MoreOptions from \"components/MoreOptions\";\r\nimport { H2, H6, Small } from \"components/Typography\";\r\nimport CreateProject from \"page-sections/uko-projects/CreateProject\";\r\nimport ProjectCard2 from \"page-sections/uko-projects/ProjectCard2\";\r\nimport { useState } from \"react\"; // styled component\r\n\r\nconst TopAreaWrapper = styled(Card)(({\r\n  theme\r\n}) => ({\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  alignItems: \"flex-end\",\r\n  flexWrap: \"wrap\",\r\n  [theme.breakpoints.down(700)]: {\r\n    \"& h2\": {\r\n      paddingTop: \"1rem\"\r\n    },\r\n    \"& img\": {\r\n      display: \"none\"\r\n    }\r\n  }\r\n}));\r\nconst StyledTabList = styled(TabList)(({\r\n  theme\r\n}) => ({\r\n  \"& .MuiTabs-flexContainer .MuiButtonBase-root\": {\r\n    marginLeft: 0,\r\n    marginRight: 0,\r\n    paddingLeft: \"1rem\",\r\n    paddingRight: \"1rem\",\r\n    borderBottom: \"2px solid\",\r\n    borderColor: theme.palette.divider\r\n  },\r\n  \"& .MuiTabs-flexContainer .Mui-selected\": {\r\n    color: theme.palette.text.primary\r\n  },\r\n  [theme.breakpoints.down(1064)]: {\r\n    maxWidth: 600\r\n  },\r\n  [theme.breakpoints.between(700, 838)]: {\r\n    maxWidth: 475\r\n  },\r\n  [theme.breakpoints.down(\"sm\")]: {\r\n    maxWidth: 320\r\n  }\r\n}));\r\n\r\nconst UkoProjectV2 = () => {\r\n  const [value, setValue] = useState(\"all\");\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const downSM = useMediaQuery(theme => theme.breakpoints.down(\"sm\"));\r\n\r\n  const handleChange = (_, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const [projectMoreEl, setProjectMoreEl] = useState(null);\r\n\r\n  const handleProjectMoreOpen = event => {\r\n    setProjectMoreEl(event.currentTarget);\r\n  };\r\n\r\n  const handleProjectMoreClose = () => setProjectMoreEl(null);\r\n\r\n  const projectList = [\"blocked\", \"upcoming\", \"blocked\", \"completed\", \"in-progress\", \"upcoming\", \"blocked\", \"completed\", \"upcoming\"];\r\n  const filterList = projectList.filter(item => value === \"all\" || item === value);\r\n  return <Box pt={2} pb={4}>\r\n      <TopAreaWrapper>\r\n        <Box>\r\n          <H2 paddingLeft={3} paddingBottom={1}>\r\n            Uko Projects\r\n          </H2>\r\n          <TabContext value={value}>\r\n            <StyledTabList variant=\"scrollable\" onChange={handleChange}>\r\n              {tabItems.map(item => <Tab disableRipple key={item.title} value={item.title.split(\" \").join(\"-\").toLowerCase()} label={<FlexBox gap={1} alignItems=\"center\">\r\n                      <H6 fontSize={12}>{item.title}</H6>\r\n                      <Small sx={{\r\n                padding: \"0px 10px\",\r\n                borderRadius: \"10px\",\r\n                backgroundColor: \"divider\"\r\n              }}>\r\n                        {item.amount}\r\n                      </Small>\r\n                    </FlexBox>} />)}\r\n            </StyledTabList>\r\n          </TabContext>\r\n        </Box>\r\n        <img src=\"/static/illustration/uko-project-v2.svg\" alt=\"UKO Projects\" />\r\n      </TopAreaWrapper>\r\n\r\n      <Grid container spacing={3} paddingTop={3}>\r\n        <Grid item xs={12}>\r\n          <FlexBox justifyContent=\"space-between\" flexWrap=\"wrap\">\r\n            <SearchInput bordered={false} placeholder=\"Find Projects\" sx={{\r\n            maxWidth: downSM ? \"100%\" : 270,\r\n            marginBottom: downSM ? 1 : 0\r\n          }} />\r\n            <Button fullWidth={downSM} variant=\"contained\" startIcon={<Add />} onClick={() => setOpenModal(true)} sx={{\r\n            fontSize: 12\r\n          }}>\r\n              Create a project\r\n            </Button>\r\n            <CreateProject open={openModal} setOpen={setOpenModal} />\r\n          </FlexBox>\r\n        </Grid>\r\n\r\n        {filterList.map((item, index) => <Grid item xs={12} sm={6} md={4} key={index}>\r\n            <ProjectCard2 handleMoreClick={handleProjectMoreOpen} />\r\n          </Grid>)}\r\n        <MoreOptions anchorEl={projectMoreEl} handleMoreClose={handleProjectMoreClose} />\r\n      </Grid>\r\n    </Box>;\r\n};\r\n\r\nconst tabItems = [{\r\n  title: \"All\",\r\n  amount: 45\r\n}, {\r\n  title: \"In Progress\",\r\n  amount: 12\r\n}, {\r\n  title: \"Upcoming\",\r\n  amount: 12\r\n}, {\r\n  title: \"Blocked\",\r\n  amount: 12\r\n}, {\r\n  title: \"Completed\",\r\n  amount: 12\r\n}];\r\nexport default UkoProjectV2;","import { styled, TextField } from \"@mui/material\";\r\nimport React from \"react\";\r\nconst StyledTextField = styled(TextField)(({\r\n  theme\r\n}) => ({\r\n  \"& .MuiOutlinedInput-input\": {\r\n    fontWeight: 500,\r\n    // color: theme.palette.text.primary,\r\n    height:\"0.em\",\r\n    \r\n  },\r\n  \"& .MuiOutlinedInput-notchedOutline\": {\r\n    borderRadius: \"8px\",\r\n    borderColor: theme.palette.action.disabled\r\n  },\r\n  \"& .MuiOutlinedInput-root.Mui-disabled .MuiOutlinedInput-notchedOutline\": {\r\n    borderColor: theme.palette.action.hover,\r\n    width:\"80%\"\r\n  },\r\n  \"& .MuiInputLabel-root\": {\r\n    fontWeight: 500,\r\n    color: theme.palette.text.disabled\r\n  },\r\n  \"& .MuiInputLabel-root.Mui-focused\": {\r\n    fontWeight: 600\r\n  },\r\n  \"& .MuiSvgIcon-root\": {\r\n    color: theme.palette.text.disabled\r\n  }\r\n}));\r\n\r\nconst AppTextField = props => {\r\n  return <StyledTextField {...props} />;\r\n};\r\n\r\nexport default AppTextField;","import { Box } from \"@mui/material\";\r\n\r\nconst FlexRowAlign = ({\r\n  children,\r\n  ...props\r\n}) => <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" {...props}>\r\n    {children}\r\n  </Box>;\r\n\r\nexport default FlexRowAlign;","import { InputBase, styled } from \"@mui/material\";\r\nimport SearchIcon from \"icons/SearchIcon\";\r\n// styled component\r\nconst StyledInputBase = styled(InputBase)(({\r\n  theme,\r\n  bordered\r\n}) => ({\r\n  height: 45,\r\n  fontSize: 12,\r\n  width: \"100%\",\r\n  maxWidth: 350,\r\n  fontWeight: 600,\r\n  padding: \"0 1rem\",\r\n  borderRadius: \"8px\",\r\n  color: theme.palette.text.primary,\r\n  backgroundColor: theme.palette.background.paper,\r\n  border: bordered ? `1px solid ${theme.palette.action.disabled}` : \"none\",\r\n  [theme.breakpoints.down(500)]: {\r\n    maxWidth: \"100%\"\r\n  },\r\n  \"::placeholder\": {\r\n    color: theme.palette.text.disabled\r\n  }\r\n})); // ------------------------------------------------------------\r\n\r\n// ------------------------------------------------------------\r\nconst SearchInput = props => {\r\n  const {\r\n    icon_style = {},\r\n    bordered = true\r\n  } = props;\r\n  return <StyledInputBase bordered={bordered} startAdornment={<SearchIcon sx={{\r\n    fontSize: 18,\r\n    marginRight: 1,\r\n    color: \"text.disabled\",\r\n    ...icon_style\r\n  }} />} {...props} />;\r\n};\r\n\r\nexport default SearchInput;","import { Box, Modal, styled } from \"@mui/material\";\r\nimport { lightTheme } from \"../constants\"; // ---------------------------------------------------------\r\n\r\n// ---------------------------------------------------------\r\nconst Wrapper = styled(Box)(({\r\n  theme\r\n}) => ({\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  padding: 24,\r\n  maxWidth: 680,\r\n  width: \"100%\",\r\n  borderRadius: \"4px\",\r\n  position: \"absolute\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  backgroundColor: lightTheme(theme) ? \"#fff\" : theme.palette.background.default\r\n}));\r\n\r\nconst AppModal = ({\r\n  children,\r\n  open,\r\n  handleClose,\r\n  ...props\r\n}) => {\r\n  return <Modal open={open} onClose={handleClose}>\r\n      <Wrapper {...props}>{children}</Wrapper>\r\n    </Modal>;\r\n};\r\n\r\nexport default AppModal;","import { SvgIcon } from \"@mui/material\";\r\n\r\nconst DeleteIcon = props => {\r\n  return <SvgIcon viewBox=\"0 0 10 12\" {...props}>\r\n      <path d=\"M4.23535 5.64706H4.94123V9.52942H4.23535V5.64706Z\" fill=\"currentColor\" />\r\n      <path d=\"M2.82349 5.64706H3.52937V9.52942H2.82349V5.64706Z\" fill=\"currentColor\" />\r\n      <path d=\"M5.64722 5.64706H6.3531V9.52942H5.64722V5.64706Z\" fill=\"currentColor\" />\r\n      <path d=\"M9.17647 1.41176H6.35294V1.05882C6.35294 0.474988 5.87798 0 5.29412 0H3.88235C3.29849 0 2.82353 0.474988 2.82353 1.05882V1.41176H0V3.52941H0.735247L1.38428 10.994C1.41231 11.5588 1.87518 12 2.44179 12H6.73466C7.30127 12 7.76414 11.5588 7.79217 10.994L8.44123 3.52941H9.17647V1.41176ZM3.52941 1.05882C3.52941 0.864212 3.68774 0.705882 3.88235 0.705882H5.29412C5.48875 0.705882 5.64706 0.864212 5.64706 1.05882V1.41176H3.52941V1.05882ZM0.705882 2.11765H8.47059V2.82353H0.705882V2.11765ZM7.08732 10.9559C7.07941 11.1455 6.92452 11.2941 6.73468 11.2941H2.44179C2.25195 11.2941 2.09706 11.1456 2.08915 10.9559C1.39861 3.00981 1.44584 3.55313 1.44376 3.52941H7.73271C7.73082 3.55071 7.77478 3.04544 7.08732 10.9559Z\" fill=\"currentColor\" />\r\n    </SvgIcon>;\r\n};\r\n\r\nexport default DeleteIcon;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUnarySpacing, getValue, handleBreakpoints, mergeBreakpointsInOrder, unstable_extendSxProp as extendSxProp, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\n\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n    return output;\n  }, []);\n}\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex',\n    flexDirection: 'column'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n    const styleFromPropValue = (propValue, breakpoint) => {\n      return {\n        '& > :not(style) + :not(style)': {\n          margin: 0,\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nconst StackRoot = styled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(style);\nconst Stack = /*#__PURE__*/React.forwardRef(function Stack(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  });\n  const props = extendSxProp(themeProps);\n  const {\n      component = 'div',\n      direction = 'column',\n      spacing = 0,\n      divider,\n      children\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = {\n    direction,\n    spacing\n  };\n  return /*#__PURE__*/_jsx(StackRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: divider ? joinChildren(children, divider) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Stack;","import { SvgIcon } from \"@mui/material\";\r\n\r\nconst PencilIcon = props => {\r\n  return <SvgIcon viewBox=\"0 0 12 12\" {...props}>\r\n      <path d=\"M10.6221 0.48305C9.97692 -0.161017 8.93219 -0.161017 8.28705 0.48305L7.70255 1.07081L1.48058 7.29007L1.46735 7.3034C1.46415 7.3066 1.46415 7.31001 1.46074 7.31001C1.45413 7.31993 1.44421 7.32974 1.43771 7.33966C1.43771 7.34297 1.4343 7.34297 1.4343 7.34627C1.42769 7.35619 1.42448 7.3628 1.41777 7.37272C1.41457 7.37603 1.41457 7.37923 1.41126 7.38264C1.40795 7.39256 1.40465 7.39917 1.40124 7.40909C1.40124 7.41229 1.39804 7.41229 1.39804 7.4157L0.0175678 11.5673C-0.0229278 11.6855 0.00785715 11.8164 0.096803 11.9041C0.159303 11.9658 0.2436 12.0003 0.331306 12C0.367153 11.9994 0.40269 11.9938 0.436987 11.9835L4.585 10.5996C4.58821 10.5996 4.58821 10.5996 4.59162 10.5964C4.60205 10.5933 4.61207 10.5888 4.62126 10.583C4.62385 10.5827 4.62612 10.5816 4.62798 10.5798C4.63779 10.5732 4.65102 10.5665 4.66093 10.5599C4.67075 10.5534 4.68077 10.5435 4.69069 10.5368C4.69399 10.5334 4.69719 10.5334 4.69719 10.5302C4.7006 10.5269 4.70721 10.5237 4.71052 10.517L11.517 3.70989C12.161 3.06469 12.161 2.01986 11.517 1.37476L10.6221 0.48305ZM4.47932 9.82336L2.18078 7.5247L7.93375 1.77118L10.2323 4.06984L4.47932 9.82336ZM1.85702 8.1357L3.86507 10.1438L0.849795 11.1479L1.85702 8.1357ZM11.0514 3.24745L10.7013 3.60089L8.40265 1.30203L8.75616 0.948691C9.14283 0.562292 9.76959 0.562292 10.1564 0.948691L11.0546 1.84702C11.4384 2.23548 11.4369 2.86085 11.0514 3.24745Z\" fill=\"currentColor\" />\r\n    </SvgIcon>;\r\n};\r\n\r\nexport default PencilIcon;","import { Menu, MenuItem } from \"@mui/material\";\r\nimport DeleteIcon from \"icons/DeleteIcon\";\r\nimport PencilIcon from \"icons/PencilIcon\";\r\nimport { Small } from \"./Typography\"; // component props interface\r\n\r\nconst MoreOptions = ({\r\n  anchorEl,\r\n  handleMoreClose\r\n}) => {\r\n  return <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleMoreClose}>\r\n      <MenuItem onClick={handleMoreClose} sx={{\r\n      \"&:hover\": {\r\n        color: \"primary.main\"\r\n      }\r\n    }}>\r\n        <PencilIcon sx={{\r\n        fontSize: 14,\r\n        marginRight: 1\r\n      }} />\r\n        <Small fontWeight={500}>Edit</Small>\r\n      </MenuItem>\r\n\r\n      <MenuItem onClick={handleMoreClose} sx={{\r\n      \"&:hover\": {\r\n        color: \"primary.main\"\r\n      }\r\n    }}>\r\n        <DeleteIcon sx={{\r\n        fontSize: 14,\r\n        marginRight: 1\r\n      }} />\r\n        <Small fontWeight={500}>Remove</Small>\r\n      </MenuItem>\r\n    </Menu>;\r\n};\r\n\r\nexport default MoreOptions;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getAvatarGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatarGroup', slot);\n}\nconst avatarGroupClasses = generateUtilityClasses('MuiAvatarGroup', ['root', 'avatar']);\nexport default avatarGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"componentsProps\", \"max\", \"slotProps\", \"spacing\", \"total\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Avatar, { avatarClasses } from '../Avatar';\nimport avatarGroupClasses, { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SPACINGS = {\n  small: -16,\n  medium: null\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, classes);\n};\nconst AvatarGroupRoot = styled('div', {\n  name: 'MuiAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${avatarGroupClasses.avatar}`]: styles.avatar\n  }, styles.root)\n})(({\n  theme\n}) => ({\n  [`& .${avatarClasses.root}`]: {\n    border: `2px solid ${(theme.vars || theme).palette.background.default}`,\n    boxSizing: 'content-box',\n    marginLeft: -8,\n    '&:last-child': {\n      marginLeft: 0\n    }\n  },\n  display: 'flex',\n  flexDirection: 'row-reverse'\n}));\nconst AvatarGroupAvatar = styled(Avatar, {\n  name: 'MuiAvatarGroup',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})(({\n  theme\n}) => ({\n  border: `2px solid ${(theme.vars || theme).palette.background.default}`,\n  boxSizing: 'content-box',\n  marginLeft: -8,\n  '&:last-child': {\n    marginLeft: 0\n  }\n}));\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  var _slotProps$additional;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatarGroup'\n  });\n  const {\n      children: childrenProp,\n      className,\n      component = 'div',\n      componentsProps = {},\n      max = 5,\n      slotProps = {},\n      spacing = 'medium',\n      total,\n      variant = 'circular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  let clampedMax = max < 2 ? 2 : max;\n  const ownerState = _extends({}, props, {\n    max,\n    spacing,\n    component,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const children = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const totalAvatars = total || children.length;\n  if (totalAvatars === clampedMax) {\n    clampedMax += 1;\n  }\n  clampedMax = Math.min(totalAvatars + 1, clampedMax);\n  const maxAvatars = Math.min(children.length, clampedMax - 1);\n  const extraAvatars = Math.max(totalAvatars - clampedMax, totalAvatars - maxAvatars, 0);\n  const marginLeft = spacing && SPACINGS[spacing] !== undefined ? SPACINGS[spacing] : -spacing;\n  const additionalAvatarSlotProps = (_slotProps$additional = slotProps.additionalAvatar) != null ? _slotProps$additional : componentsProps.additionalAvatar;\n  return /*#__PURE__*/_jsxs(AvatarGroupRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [extraAvatars ? /*#__PURE__*/_jsxs(AvatarGroupAvatar, _extends({\n      ownerState: ownerState,\n      variant: variant\n    }, additionalAvatarSlotProps, {\n      className: clsx(classes.avatar, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.className),\n      style: _extends({\n        marginLeft\n      }, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.style),\n      children: [\"+\", extraAvatars]\n    })) : null, children.slice(0, maxAvatars).reverse().map((child, index) => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(child.props.className, classes.avatar),\n        style: _extends({\n          // Consistent with \"&:last-child\" styling for the default spacing,\n          // we do not apply custom marginLeft spacing on the last child\n          marginLeft: index === maxAvatars - 1 ? undefined : marginLeft\n        }, child.props.style),\n        variant: child.props.variant || variant\n      });\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n  /**\n   * Max avatars to show before +x.\n   * @default 5\n   */\n  max: chainPropTypes(PropTypes.number, props => {\n    if (props.max < 2) {\n      return new Error(['MUI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n  /**\n   * Spacing between avatars.\n   * @default 'medium'\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The total number of avatars. Used for calculating the number of extra avatars.\n   * @default children.length\n   */\n  total: PropTypes.number,\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useThemeProps } from '@mui/material/styles';\nimport { useDefaultDates, useUtils } from '../internals/hooks/useUtils';\nimport { parsePickerInputValue, parseNonNullablePickerDate } from '../internals/utils/date-utils';\nexport const isYearOnlyView = views => views.length === 1 && views[0] === 'year';\nexport const isYearAndMonthViews = views => views.length === 2 && views.indexOf('month') !== -1 && views.indexOf('year') !== -1;\n\nconst getFormatAndMaskByViews = (views, utils) => {\n  if (isYearOnlyView(views)) {\n    return {\n      inputFormat: utils.formats.year\n    };\n  }\n\n  if (isYearAndMonthViews(views)) {\n    return {\n      disableMaskedInput: true,\n      inputFormat: utils.formats.monthAndYear\n    };\n  }\n\n  return {\n    inputFormat: utils.formats.keyboardDate\n  };\n};\n\nexport function useDatePickerDefaultizedProps(props, name) {\n  var _themeProps$views;\n\n  const utils = useUtils();\n  const defaultDates = useDefaultDates(); // This is technically unsound if the type parameters appear in optional props.\n  // Optional props can be filled by `useThemeProps` with types that don't match the type parameters.\n\n  const themeProps = useThemeProps({\n    props,\n    name\n  });\n  const views = (_themeProps$views = themeProps.views) != null ? _themeProps$views : ['year', 'day'];\n  return _extends({\n    openTo: 'day',\n    disableFuture: false,\n    disablePast: false\n  }, getFormatAndMaskByViews(views, utils), themeProps, {\n    views,\n    minDate: parseNonNullablePickerDate(utils, themeProps.minDate, defaultDates.minDate),\n    maxDate: parseNonNullablePickerDate(utils, themeProps.maxDate, defaultDates.maxDate)\n  });\n}\nexport const datePickerValueManager = {\n  emptyValue: null,\n  getTodayValue: utils => utils.date(),\n  parseInput: parsePickerInputValue,\n  areValuesEqual: (utils, a, b) => utils.isEqual(a, b)\n};","import { generateUtilityClass, generateUtilityClasses } from '@mui/material';\nexport function getDatePickerToolbarUtilityClass(slot) {\n  return generateUtilityClass('MuiDatePickerToolbar', slot);\n}\nexport const datePickerToolbarClasses = generateUtilityClasses('MuiDatePickerToolbar', ['root', 'title']);","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"parsedValue\", \"isLandscape\", \"isMobileKeyboardViewOpen\", \"onChange\", \"toggleMobileKeyboardView\", \"toolbarFormat\", \"toolbarPlaceholder\", \"toolbarTitle\", \"views\"];\nimport * as React from 'react';\nimport Typography from '@mui/material/Typography';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { PickersToolbar } from '../internals/components/PickersToolbar';\nimport { useLocaleText, useUtils } from '../internals/hooks/useUtils';\nimport { isYearAndMonthViews, isYearOnlyView } from './shared';\nimport { getDatePickerToolbarUtilityClass } from './datePickerToolbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    title: ['title']\n  };\n  return composeClasses(slots, getDatePickerToolbarUtilityClass, classes);\n};\n\nconst DatePickerToolbarRoot = styled(PickersToolbar, {\n  name: 'MuiDatePickerToolbar',\n  slot: 'Root',\n  overridesResolver: (_, styles) => styles.root\n})({});\nconst DatePickerToolbarTitle = styled(Typography, {\n  name: 'MuiDatePickerToolbar',\n  slot: 'Title',\n  overridesResolver: (_, styles) => styles.title\n})(({\n  ownerState\n}) => _extends({}, ownerState.isLandscape && {\n  margin: 'auto 16px auto auto'\n}));\n\n/**\n * @ignore - internal component.\n */\nexport const DatePickerToolbar = /*#__PURE__*/React.forwardRef(function DatePickerToolbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDatePickerToolbar'\n  });\n\n  const {\n    parsedValue,\n    isLandscape,\n    isMobileKeyboardViewOpen,\n    toggleMobileKeyboardView,\n    toolbarFormat,\n    toolbarPlaceholder = '––',\n    toolbarTitle: toolbarTitleProp,\n    views\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const utils = useUtils();\n  const localeText = useLocaleText();\n  const classes = useUtilityClasses(props);\n  const toolbarTitle = toolbarTitleProp != null ? toolbarTitleProp : localeText.datePickerDefaultToolbarTitle;\n  const dateText = React.useMemo(() => {\n    if (!parsedValue) {\n      return toolbarPlaceholder;\n    }\n\n    if (toolbarFormat) {\n      return utils.formatByString(parsedValue, toolbarFormat);\n    }\n\n    if (isYearOnlyView(views)) {\n      return utils.format(parsedValue, 'year');\n    }\n\n    if (isYearAndMonthViews(views)) {\n      return utils.format(parsedValue, 'month');\n    } // Little localization hack (Google is doing the same for android native pickers):\n    // For english localization it is convenient to include weekday into the date \"Mon, Jun 1\".\n    // For other locales using strings like \"June 1\", without weekday.\n\n\n    return /en/.test(utils.getCurrentLocaleCode()) ? utils.format(parsedValue, 'normalDateWithWeekday') : utils.format(parsedValue, 'normalDate');\n  }, [parsedValue, toolbarFormat, toolbarPlaceholder, utils, views]);\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(DatePickerToolbarRoot, _extends({\n    ref: ref,\n    toolbarTitle: toolbarTitle,\n    isMobileKeyboardViewOpen: isMobileKeyboardViewOpen,\n    toggleMobileKeyboardView: toggleMobileKeyboardView,\n    isLandscape: isLandscape,\n    className: classes.root\n  }, other, {\n    children: /*#__PURE__*/_jsx(DatePickerToolbarTitle, {\n      variant: \"h4\",\n      align: isLandscape ? 'left' : 'center',\n      ownerState: ownerState,\n      className: classes.title,\n      children: dateText\n    })\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"onChange\", \"PopperProps\", \"PaperProps\", \"ToolbarComponent\", \"TransitionComponent\", \"value\", \"components\", \"componentsProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDatePickerDefaultizedProps, datePickerValueManager } from '../DatePicker/shared';\nimport { DatePickerToolbar } from '../DatePicker/DatePickerToolbar';\nimport { DesktopWrapper } from '../internals/components/wrappers/DesktopWrapper';\nimport { CalendarOrClockPicker } from '../internals/components/CalendarOrClockPicker';\nimport { useDateValidation } from '../internals/hooks/validation/useDateValidation';\nimport { KeyboardDateInput } from '../internals/components/KeyboardDateInput';\nimport { usePickerState } from '../internals/hooks/usePickerState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n *\n * Demos:\n *\n * - [Date Picker](https://mui.com/x/react-date-pickers/date-picker/)\n *\n * API:\n *\n * - [DesktopDatePicker API](https://mui.com/x/api/date-pickers/desktop-date-picker/)\n */\nexport const DesktopDatePicker = /*#__PURE__*/React.forwardRef(function DesktopDatePicker(inProps, ref) {\n  const props = useDatePickerDefaultizedProps(inProps, 'MuiDesktopDatePicker');\n  const validationError = useDateValidation(props) !== null;\n  const {\n    pickerProps,\n    inputProps,\n    wrapperProps\n  } = usePickerState(props, datePickerValueManager);\n\n  const {\n    PopperProps,\n    PaperProps,\n    ToolbarComponent = DatePickerToolbar,\n    TransitionComponent,\n    components,\n    componentsProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const AllDateInputProps = _extends({}, inputProps, other, {\n    components,\n    componentsProps,\n    ref,\n    validationError\n  });\n\n  return /*#__PURE__*/_jsx(DesktopWrapper, _extends({}, wrapperProps, {\n    DateInputProps: AllDateInputProps,\n    KeyboardDateInputComponent: KeyboardDateInput,\n    PopperProps: PopperProps,\n    PaperProps: PaperProps,\n    TransitionComponent: TransitionComponent,\n    components: components,\n    componentsProps: componentsProps,\n    children: /*#__PURE__*/_jsx(CalendarOrClockPicker, _extends({}, pickerProps, {\n      autoFocus: true,\n      toolbarTitle: props.label || props.toolbarTitle,\n      ToolbarComponent: ToolbarComponent,\n      DateInputProps: AllDateInputProps,\n      components: components,\n      componentsProps: componentsProps\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DesktopDatePicker.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Regular expression to detect \"accepted\" symbols.\n   * @default /\\dap/gi\n   */\n  acceptRegex: PropTypes.instanceOf(RegExp),\n  autoFocus: PropTypes.bool,\n  children: PropTypes.node,\n\n  /**\n   * className applied to the root component.\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true` the popup or dialog will immediately close after submitting full date.\n   * @default `true` for Desktop, `false` for Mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).\n   */\n  closeOnSelect: PropTypes.bool,\n\n  /**\n   * Overrideable components.\n   * @default {}\n   */\n  components: PropTypes.object,\n\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * Formats the day of week displayed in the calendar header.\n   * @param {string} day The day of week provided by the adapter's method `getWeekdays`.\n   * @returns {string} The name to display.\n   * @default (day) => day.charAt(0).toUpperCase()\n   */\n  dayOfWeekFormatter: PropTypes.func,\n\n  /**\n   * Default calendar month displayed when `value={null}`.\n   */\n  defaultCalendarMonth: PropTypes.any,\n\n  /**\n   * If `true`, the picker and text field are disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true` future days are disabled.\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n\n  /**\n   * If `true`, today's date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n\n  /**\n   * Disable mask on the keyboard, this should be used rarely. Consider passing proper mask for your format.\n   * @default false\n   */\n  disableMaskedInput: PropTypes.bool,\n\n  /**\n   * Do not render open picker button (renders only text field with validation).\n   * @default false\n   */\n  disableOpenPicker: PropTypes.bool,\n\n  /**\n   * If `true` past days are disabled.\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n\n  /**\n   * Get aria-label text for control that opens picker dialog. Aria-label text must include selected date. @DateIOType\n   * @template TInputDate, TDate\n   * @param {TInputDate} date The date from which we want to add an aria-text.\n   * @param {MuiPickersAdapter<TDate>} utils The utils to manipulate the date.\n   * @returns {string} The aria-text to render inside the dialog.\n   * @default (date, utils) => `Choose date, selected date is ${utils.format(utils.date(date), 'fullDate')}`\n   */\n  getOpenDialogAriaText: PropTypes.func,\n\n  /**\n   * Get aria-label text for switching between views button.\n   * @param {CalendarPickerView} currentView The view from which we want to get the button text.\n   * @returns {string} The label of the view.\n   * @deprecated Use the `localeText` prop of `LocalizationProvider` instead, see https://mui.com/x/react-date-pickers/localization/.\n   */\n  getViewSwitchingButtonText: PropTypes.func,\n  ignoreInvalidInputs: PropTypes.bool,\n\n  /**\n   * Props to pass to keyboard input adornment.\n   */\n  InputAdornmentProps: PropTypes.object,\n\n  /**\n   * Format string.\n   */\n  inputFormat: PropTypes.string,\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.object\n  })]),\n  label: PropTypes.node,\n\n  /**\n   * Left arrow icon aria-label text.\n   * @deprecated\n   */\n  leftArrowButtonText: PropTypes.string,\n\n  /**\n   * If `true` renders `LoadingComponent` in calendar instead of calendar view.\n   * Can be used to preload information and show it in calendar.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Custom mask. Can be used to override generate from format. (e.g. `__/__/____ __:__` or `__/__/____ __:__ _M`).\n   */\n  mask: PropTypes.string,\n\n  /**\n   * Maximal selectable date. @DateIOType\n   */\n  maxDate: PropTypes.any,\n\n  /**\n   * Minimal selectable date. @DateIOType\n   */\n  minDate: PropTypes.any,\n\n  /**\n   * Callback fired when date is accepted @DateIOType.\n   * @template TValue\n   * @param {TValue} value The value that was just accepted.\n   */\n  onAccept: PropTypes.func,\n\n  /**\n   * Callback fired when the value (the selected date) changes @DateIOType.\n   * @template TValue\n   * @param {TValue} value The new parsed value.\n   * @param {string} keyboardInputValue The current value of the keyboard input.\n   */\n  onChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback that fired when input value or new `value` prop validation returns **new** validation error (or value is valid after error).\n   * In case of validation error detected `reason` prop return non-null value and `TextField` must be displayed in `error` state.\n   * This can be used to render appropriate form error.\n   *\n   * [Read the guide](https://next.material-ui-pickers.dev/guides/forms) about form integration and error displaying.\n   * @DateIOType\n   *\n   * @template TError, TInputValue\n   * @param {TError} reason The reason why the current value is not valid.\n   * @param {TInputValue} value The invalid value.\n   */\n  onError: PropTypes.func,\n\n  /**\n   * Callback firing on month change @DateIOType.\n   * @template TDate\n   * @param {TDate} month The new month.\n   * @returns {void|Promise} -\n   */\n  onMonthChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Callback fired on view change.\n   * @param {CalendarPickerView} view The new view.\n   */\n  onViewChange: PropTypes.func,\n\n  /**\n   * Callback firing on year change @DateIOType.\n   * @template TDate\n   * @param {TDate} year The new year.\n   */\n  onYearChange: PropTypes.func,\n\n  /**\n   * Control the popup or dialog open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Props to pass to keyboard adornment button.\n   */\n  OpenPickerButtonProps: PropTypes.object,\n\n  /**\n   * First view to show.\n   * Must be a valid option from `views` list\n   * @default 'day'\n   */\n  openTo: PropTypes.oneOf(['day', 'month', 'year']),\n\n  /**\n   * Force rendering in particular orientation.\n   */\n  orientation: PropTypes.oneOf(['landscape', 'portrait']),\n\n  /**\n   * Paper props passed down to [Paper](https://mui.com/material-ui/api/paper/) component.\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Popper props passed down to [Popper](https://mui.com/material-ui/api/popper/) component.\n   */\n  PopperProps: PropTypes.object,\n\n  /**\n   * Make picker read only.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Disable heavy animations.\n   * @default typeof navigator !== 'undefined' && /(android)/i.test(navigator.userAgent)\n   */\n  reduceAnimations: PropTypes.bool,\n\n  /**\n   * Custom renderer for day. Check the [PickersDay](https://mui.com/x/api/date-pickers/pickers-day/) component.\n   * @template TDate\n   * @param {TDate} day The day to render.\n   * @param {Array<TDate | null>} selectedDays The days currently selected.\n   * @param {PickersDayProps<TDate>} pickersDayProps The props of the day to render.\n   * @returns {JSX.Element} The element representing the day.\n   */\n  renderDay: PropTypes.func,\n\n  /**\n   * The `renderInput` prop allows you to customize the rendered input.\n   * The `props` argument of this render prop contains props of [TextField](https://mui.com/material-ui/api/text-field/#props) that you need to forward.\n   * Pay specific attention to the `ref` and `inputProps` keys.\n   * @example ```jsx\n   * renderInput={props => <TextField {...props} />}\n   * ````\n   * @param {MuiTextFieldPropsType} props The props of the input.\n   * @returns {React.ReactNode} The node to render as the input.\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Component displaying when passed `loading` true.\n   * @returns {React.ReactNode} The node to render when loading.\n   * @default () => <span data-mui-test=\"loading-progress\">...</span>\n   */\n  renderLoading: PropTypes.func,\n\n  /**\n   * Custom formatter to be passed into Rifm component.\n   * @param {string} str The un-formatted string.\n   * @returns {string} The formatted string.\n   */\n  rifmFormatter: PropTypes.func,\n\n  /**\n   * Right arrow icon aria-label text.\n   * @deprecated\n   */\n  rightArrowButtonText: PropTypes.string,\n\n  /**\n   * Disable specific date. @DateIOType\n   * @template TDate\n   * @param {TDate} day The date to test.\n   * @returns {boolean} Returns `true` if the date should be disabled.\n   */\n  shouldDisableDate: PropTypes.func,\n\n  /**\n   * Disable specific months dynamically.\n   * Works like `shouldDisableDate` but for month selection view @DateIOType.\n   * @template TDate\n   * @param {TDate} month The month to check.\n   * @returns {boolean} If `true` the month will be disabled.\n   */\n  shouldDisableMonth: PropTypes.func,\n\n  /**\n   * Disable specific years dynamically.\n   * Works like `shouldDisableDate` but for year selection view @DateIOType.\n   * @template TDate\n   * @param {TDate} year The year to test.\n   * @returns {boolean} Returns `true` if the year should be disabled.\n   */\n  shouldDisableYear: PropTypes.func,\n\n  /**\n   * If `true`, days that have `outsideCurrentMonth={true}` are displayed.\n   * @default false\n   */\n  showDaysOutsideCurrentMonth: PropTypes.bool,\n\n  /**\n   * If `true`, show the toolbar even in desktop mode.\n   */\n  showToolbar: PropTypes.bool,\n\n  /**\n   * Component that will replace default toolbar renderer.\n   * @default DatePickerToolbar\n   */\n  ToolbarComponent: PropTypes.elementType,\n\n  /**\n   * Date format, that is displaying in toolbar.\n   */\n  toolbarFormat: PropTypes.string,\n\n  /**\n   * Mobile picker date value placeholder, displaying if `value` === `null`.\n   * @default '–'\n   */\n  toolbarPlaceholder: PropTypes.node,\n\n  /**\n   * Mobile picker title, displaying in the toolbar.\n   * @default 'Select date'\n   */\n  toolbarTitle: PropTypes.node,\n\n  /**\n   * Custom component for popper [Transition](https://mui.com/material-ui/transitions/#transitioncomponent-prop).\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The value of the picker.\n   */\n  value: PropTypes.any,\n\n  /**\n   * Array of views to show.\n   * @default ['year', 'day']\n   */\n  views: PropTypes.arrayOf(PropTypes.oneOf(['day', 'month', 'year']).isRequired)\n} : void 0;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"ToolbarComponent\", \"value\", \"onChange\", \"components\", \"componentsProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDatePickerDefaultizedProps, datePickerValueManager } from '../DatePicker/shared';\nimport { DatePickerToolbar } from '../DatePicker/DatePickerToolbar';\nimport { MobileWrapper } from '../internals/components/wrappers/MobileWrapper';\nimport { CalendarOrClockPicker } from '../internals/components/CalendarOrClockPicker';\nimport { useDateValidation } from '../internals/hooks/validation/useDateValidation';\nimport { PureDateInput } from '../internals/components/PureDateInput';\nimport { usePickerState } from '../internals/hooks/usePickerState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n *\n * Demos:\n *\n * - [Date Picker](https://mui.com/x/react-date-pickers/date-picker/)\n *\n * API:\n *\n * - [MobileDatePicker API](https://mui.com/x/api/date-pickers/mobile-date-picker/)\n */\nexport const MobileDatePicker = /*#__PURE__*/React.forwardRef(function MobileDatePicker(inProps, ref) {\n  const props = useDatePickerDefaultizedProps(inProps, 'MuiMobileDatePicker');\n  const validationError = useDateValidation(props) !== null;\n  const {\n    pickerProps,\n    inputProps,\n    wrapperProps\n  } = usePickerState(props, datePickerValueManager); // Note that we are passing down all the value without spread.\n  // It saves us >1kb gzip and make any prop available automatically on any level down.\n\n  const {\n    ToolbarComponent = DatePickerToolbar,\n    components,\n    componentsProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const DateInputProps = _extends({}, inputProps, other, {\n    components,\n    componentsProps,\n    ref,\n    validationError\n  });\n\n  return /*#__PURE__*/_jsx(MobileWrapper, _extends({}, other, wrapperProps, {\n    DateInputProps: DateInputProps,\n    PureDateInputComponent: PureDateInput,\n    components: components,\n    componentsProps: componentsProps,\n    children: /*#__PURE__*/_jsx(CalendarOrClockPicker, _extends({}, pickerProps, {\n      autoFocus: true,\n      toolbarTitle: props.label || props.toolbarTitle,\n      ToolbarComponent: ToolbarComponent,\n      DateInputProps: DateInputProps,\n      components: components,\n      componentsProps: componentsProps\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MobileDatePicker.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Regular expression to detect \"accepted\" symbols.\n   * @default /\\dap/gi\n   */\n  acceptRegex: PropTypes.instanceOf(RegExp),\n  autoFocus: PropTypes.bool,\n  children: PropTypes.node,\n\n  /**\n   * className applied to the root component.\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true` the popup or dialog will immediately close after submitting full date.\n   * @default `true` for Desktop, `false` for Mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).\n   */\n  closeOnSelect: PropTypes.bool,\n\n  /**\n   * Overrideable components.\n   * @default {}\n   */\n  components: PropTypes.object,\n\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * Formats the day of week displayed in the calendar header.\n   * @param {string} day The day of week provided by the adapter's method `getWeekdays`.\n   * @returns {string} The name to display.\n   * @default (day) => day.charAt(0).toUpperCase()\n   */\n  dayOfWeekFormatter: PropTypes.func,\n\n  /**\n   * Default calendar month displayed when `value={null}`.\n   */\n  defaultCalendarMonth: PropTypes.any,\n\n  /**\n   * Props applied to the [`Dialog`](https://mui.com/material-ui/api/dialog/) element.\n   */\n  DialogProps: PropTypes.object,\n\n  /**\n   * If `true`, the picker and text field are disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true` future days are disabled.\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n\n  /**\n   * If `true`, today's date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n\n  /**\n   * Disable mask on the keyboard, this should be used rarely. Consider passing proper mask for your format.\n   * @default false\n   */\n  disableMaskedInput: PropTypes.bool,\n\n  /**\n   * Do not render open picker button (renders only text field with validation).\n   * @default false\n   */\n  disableOpenPicker: PropTypes.bool,\n\n  /**\n   * If `true` past days are disabled.\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n\n  /**\n   * Get aria-label text for control that opens picker dialog. Aria-label text must include selected date. @DateIOType\n   * @template TInputDate, TDate\n   * @param {TInputDate} date The date from which we want to add an aria-text.\n   * @param {MuiPickersAdapter<TDate>} utils The utils to manipulate the date.\n   * @returns {string} The aria-text to render inside the dialog.\n   * @default (date, utils) => `Choose date, selected date is ${utils.format(utils.date(date), 'fullDate')}`\n   */\n  getOpenDialogAriaText: PropTypes.func,\n\n  /**\n   * Get aria-label text for switching between views button.\n   * @param {CalendarPickerView} currentView The view from which we want to get the button text.\n   * @returns {string} The label of the view.\n   * @deprecated Use the `localeText` prop of `LocalizationProvider` instead, see https://mui.com/x/react-date-pickers/localization/.\n   */\n  getViewSwitchingButtonText: PropTypes.func,\n  ignoreInvalidInputs: PropTypes.bool,\n\n  /**\n   * Props to pass to keyboard input adornment.\n   */\n  InputAdornmentProps: PropTypes.object,\n\n  /**\n   * Format string.\n   */\n  inputFormat: PropTypes.string,\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.object\n  })]),\n  label: PropTypes.node,\n\n  /**\n   * Left arrow icon aria-label text.\n   * @deprecated\n   */\n  leftArrowButtonText: PropTypes.string,\n\n  /**\n   * If `true` renders `LoadingComponent` in calendar instead of calendar view.\n   * Can be used to preload information and show it in calendar.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Custom mask. Can be used to override generate from format. (e.g. `__/__/____ __:__` or `__/__/____ __:__ _M`).\n   */\n  mask: PropTypes.string,\n\n  /**\n   * Maximal selectable date. @DateIOType\n   */\n  maxDate: PropTypes.any,\n\n  /**\n   * Minimal selectable date. @DateIOType\n   */\n  minDate: PropTypes.any,\n\n  /**\n   * Callback fired when date is accepted @DateIOType.\n   * @template TValue\n   * @param {TValue} value The value that was just accepted.\n   */\n  onAccept: PropTypes.func,\n\n  /**\n   * Callback fired when the value (the selected date) changes @DateIOType.\n   * @template TValue\n   * @param {TValue} value The new parsed value.\n   * @param {string} keyboardInputValue The current value of the keyboard input.\n   */\n  onChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback that fired when input value or new `value` prop validation returns **new** validation error (or value is valid after error).\n   * In case of validation error detected `reason` prop return non-null value and `TextField` must be displayed in `error` state.\n   * This can be used to render appropriate form error.\n   *\n   * [Read the guide](https://next.material-ui-pickers.dev/guides/forms) about form integration and error displaying.\n   * @DateIOType\n   *\n   * @template TError, TInputValue\n   * @param {TError} reason The reason why the current value is not valid.\n   * @param {TInputValue} value The invalid value.\n   */\n  onError: PropTypes.func,\n\n  /**\n   * Callback firing on month change @DateIOType.\n   * @template TDate\n   * @param {TDate} month The new month.\n   * @returns {void|Promise} -\n   */\n  onMonthChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Callback fired on view change.\n   * @param {CalendarPickerView} view The new view.\n   */\n  onViewChange: PropTypes.func,\n\n  /**\n   * Callback firing on year change @DateIOType.\n   * @template TDate\n   * @param {TDate} year The new year.\n   */\n  onYearChange: PropTypes.func,\n\n  /**\n   * Control the popup or dialog open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Props to pass to keyboard adornment button.\n   */\n  OpenPickerButtonProps: PropTypes.object,\n\n  /**\n   * First view to show.\n   * Must be a valid option from `views` list\n   * @default 'day'\n   */\n  openTo: PropTypes.oneOf(['day', 'month', 'year']),\n\n  /**\n   * Force rendering in particular orientation.\n   */\n  orientation: PropTypes.oneOf(['landscape', 'portrait']),\n\n  /**\n   * Make picker read only.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Disable heavy animations.\n   * @default typeof navigator !== 'undefined' && /(android)/i.test(navigator.userAgent)\n   */\n  reduceAnimations: PropTypes.bool,\n\n  /**\n   * Custom renderer for day. Check the [PickersDay](https://mui.com/x/api/date-pickers/pickers-day/) component.\n   * @template TDate\n   * @param {TDate} day The day to render.\n   * @param {Array<TDate | null>} selectedDays The days currently selected.\n   * @param {PickersDayProps<TDate>} pickersDayProps The props of the day to render.\n   * @returns {JSX.Element} The element representing the day.\n   */\n  renderDay: PropTypes.func,\n\n  /**\n   * The `renderInput` prop allows you to customize the rendered input.\n   * The `props` argument of this render prop contains props of [TextField](https://mui.com/material-ui/api/text-field/#props) that you need to forward.\n   * Pay specific attention to the `ref` and `inputProps` keys.\n   * @example ```jsx\n   * renderInput={props => <TextField {...props} />}\n   * ````\n   * @param {MuiTextFieldPropsType} props The props of the input.\n   * @returns {React.ReactNode} The node to render as the input.\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Component displaying when passed `loading` true.\n   * @returns {React.ReactNode} The node to render when loading.\n   * @default () => <span data-mui-test=\"loading-progress\">...</span>\n   */\n  renderLoading: PropTypes.func,\n\n  /**\n   * Custom formatter to be passed into Rifm component.\n   * @param {string} str The un-formatted string.\n   * @returns {string} The formatted string.\n   */\n  rifmFormatter: PropTypes.func,\n\n  /**\n   * Right arrow icon aria-label text.\n   * @deprecated\n   */\n  rightArrowButtonText: PropTypes.string,\n\n  /**\n   * Disable specific date. @DateIOType\n   * @template TDate\n   * @param {TDate} day The date to test.\n   * @returns {boolean} Returns `true` if the date should be disabled.\n   */\n  shouldDisableDate: PropTypes.func,\n\n  /**\n   * Disable specific months dynamically.\n   * Works like `shouldDisableDate` but for month selection view @DateIOType.\n   * @template TDate\n   * @param {TDate} month The month to check.\n   * @returns {boolean} If `true` the month will be disabled.\n   */\n  shouldDisableMonth: PropTypes.func,\n\n  /**\n   * Disable specific years dynamically.\n   * Works like `shouldDisableDate` but for year selection view @DateIOType.\n   * @template TDate\n   * @param {TDate} year The year to test.\n   * @returns {boolean} Returns `true` if the year should be disabled.\n   */\n  shouldDisableYear: PropTypes.func,\n\n  /**\n   * If `true`, days that have `outsideCurrentMonth={true}` are displayed.\n   * @default false\n   */\n  showDaysOutsideCurrentMonth: PropTypes.bool,\n\n  /**\n   * If `true`, show the toolbar even in desktop mode.\n   */\n  showToolbar: PropTypes.bool,\n\n  /**\n   * Component that will replace default toolbar renderer.\n   * @default DatePickerToolbar\n   */\n  ToolbarComponent: PropTypes.elementType,\n\n  /**\n   * Date format, that is displaying in toolbar.\n   */\n  toolbarFormat: PropTypes.string,\n\n  /**\n   * Mobile picker date value placeholder, displaying if `value` === `null`.\n   * @default '–'\n   */\n  toolbarPlaceholder: PropTypes.node,\n\n  /**\n   * Mobile picker title, displaying in the toolbar.\n   * @default 'Select date'\n   */\n  toolbarTitle: PropTypes.node,\n\n  /**\n   * The value of the picker.\n   */\n  value: PropTypes.any,\n\n  /**\n   * Array of views to show.\n   * @default ['year', 'day']\n   */\n  views: PropTypes.arrayOf(PropTypes.oneOf(['day', 'month', 'year']).isRequired)\n} : void 0;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"desktopModeMediaQuery\", \"DialogProps\", \"PopperProps\", \"TransitionComponent\"];\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport PropTypes from 'prop-types';\nimport { DesktopDatePicker } from '../DesktopDatePicker';\nimport { MobileDatePicker } from '../MobileDatePicker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n *\n * Demos:\n *\n * - [Date Picker](https://mui.com/x/react-date-pickers/date-picker/)\n * - [Pickers](https://mui.com/x/react-date-pickers/)\n *\n * API:\n *\n * - [DatePicker API](https://mui.com/x/api/date-pickers/date-picker/)\n */\nexport const DatePicker = /*#__PURE__*/React.forwardRef(function DatePicker(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDatePicker'\n  });\n\n  const {\n    desktopModeMediaQuery = '@media (pointer: fine)',\n    DialogProps,\n    PopperProps,\n    TransitionComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded); // defaults to `true` in environments where `window.matchMedia` would not be available (i.e. test/jsdom)\n\n\n  const isDesktop = useMediaQuery(desktopModeMediaQuery, {\n    defaultMatches: true\n  });\n\n  if (isDesktop) {\n    return /*#__PURE__*/_jsx(DesktopDatePicker, _extends({\n      ref: ref,\n      PopperProps: PopperProps,\n      TransitionComponent: TransitionComponent\n    }, other));\n  }\n\n  return /*#__PURE__*/_jsx(MobileDatePicker, _extends({\n    ref: ref,\n    DialogProps: DialogProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DatePicker.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Regular expression to detect \"accepted\" symbols.\n   * @default /\\dap/gi\n   */\n  acceptRegex: PropTypes.instanceOf(RegExp),\n  autoFocus: PropTypes.bool,\n  children: PropTypes.node,\n\n  /**\n   * className applied to the root component.\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true` the popup or dialog will immediately close after submitting full date.\n   * @default `true` for Desktop, `false` for Mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).\n   */\n  closeOnSelect: PropTypes.bool,\n\n  /**\n   * Overrideable components.\n   * @default {}\n   */\n  components: PropTypes.object,\n\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * Formats the day of week displayed in the calendar header.\n   * @param {string} day The day of week provided by the adapter's method `getWeekdays`.\n   * @returns {string} The name to display.\n   * @default (day) => day.charAt(0).toUpperCase()\n   */\n  dayOfWeekFormatter: PropTypes.func,\n\n  /**\n   * Default calendar month displayed when `value={null}`.\n   */\n  defaultCalendarMonth: PropTypes.any,\n\n  /**\n   * CSS media query when `Mobile` mode will be changed to `Desktop`.\n   * @default '@media (pointer: fine)'\n   * @example '@media (min-width: 720px)' or theme.breakpoints.up(\"sm\")\n   */\n  desktopModeMediaQuery: PropTypes.string,\n\n  /**\n   * Props applied to the [`Dialog`](https://mui.com/material-ui/api/dialog/) element.\n   */\n  DialogProps: PropTypes.object,\n\n  /**\n   * If `true`, the picker and text field are disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true` future days are disabled.\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n\n  /**\n   * If `true`, today's date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n\n  /**\n   * Disable mask on the keyboard, this should be used rarely. Consider passing proper mask for your format.\n   * @default false\n   */\n  disableMaskedInput: PropTypes.bool,\n\n  /**\n   * Do not render open picker button (renders only text field with validation).\n   * @default false\n   */\n  disableOpenPicker: PropTypes.bool,\n\n  /**\n   * If `true` past days are disabled.\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n\n  /**\n   * Get aria-label text for control that opens picker dialog. Aria-label text must include selected date. @DateIOType\n   * @template TInputDate, TDate\n   * @param {TInputDate} date The date from which we want to add an aria-text.\n   * @param {MuiPickersAdapter<TDate>} utils The utils to manipulate the date.\n   * @returns {string} The aria-text to render inside the dialog.\n   * @default (date, utils) => `Choose date, selected date is ${utils.format(utils.date(date), 'fullDate')}`\n   */\n  getOpenDialogAriaText: PropTypes.func,\n\n  /**\n   * Get aria-label text for switching between views button.\n   * @param {CalendarPickerView} currentView The view from which we want to get the button text.\n   * @returns {string} The label of the view.\n   * @deprecated Use the `localeText` prop of `LocalizationProvider` instead, see https://mui.com/x/react-date-pickers/localization/.\n   */\n  getViewSwitchingButtonText: PropTypes.func,\n  ignoreInvalidInputs: PropTypes.bool,\n\n  /**\n   * Props to pass to keyboard input adornment.\n   */\n  InputAdornmentProps: PropTypes.object,\n\n  /**\n   * Format string.\n   */\n  inputFormat: PropTypes.string,\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.object\n  })]),\n  label: PropTypes.node,\n\n  /**\n   * Left arrow icon aria-label text.\n   * @deprecated\n   */\n  leftArrowButtonText: PropTypes.string,\n\n  /**\n   * If `true` renders `LoadingComponent` in calendar instead of calendar view.\n   * Can be used to preload information and show it in calendar.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Custom mask. Can be used to override generate from format. (e.g. `__/__/____ __:__` or `__/__/____ __:__ _M`).\n   */\n  mask: PropTypes.string,\n\n  /**\n   * Maximal selectable date. @DateIOType\n   */\n  maxDate: PropTypes.any,\n\n  /**\n   * Minimal selectable date. @DateIOType\n   */\n  minDate: PropTypes.any,\n\n  /**\n   * Callback fired when date is accepted @DateIOType.\n   * @template TValue\n   * @param {TValue} value The value that was just accepted.\n   */\n  onAccept: PropTypes.func,\n\n  /**\n   * Callback fired when the value (the selected date) changes @DateIOType.\n   * @template TValue\n   * @param {TValue} value The new parsed value.\n   * @param {string} keyboardInputValue The current value of the keyboard input.\n   */\n  onChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback that fired when input value or new `value` prop validation returns **new** validation error (or value is valid after error).\n   * In case of validation error detected `reason` prop return non-null value and `TextField` must be displayed in `error` state.\n   * This can be used to render appropriate form error.\n   *\n   * [Read the guide](https://next.material-ui-pickers.dev/guides/forms) about form integration and error displaying.\n   * @DateIOType\n   *\n   * @template TError, TInputValue\n   * @param {TError} reason The reason why the current value is not valid.\n   * @param {TInputValue} value The invalid value.\n   */\n  onError: PropTypes.func,\n\n  /**\n   * Callback firing on month change @DateIOType.\n   * @template TDate\n   * @param {TDate} month The new month.\n   * @returns {void|Promise} -\n   */\n  onMonthChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Callback fired on view change.\n   * @param {CalendarPickerView} view The new view.\n   */\n  onViewChange: PropTypes.func,\n\n  /**\n   * Callback firing on year change @DateIOType.\n   * @template TDate\n   * @param {TDate} year The new year.\n   */\n  onYearChange: PropTypes.func,\n\n  /**\n   * Control the popup or dialog open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Props to pass to keyboard adornment button.\n   */\n  OpenPickerButtonProps: PropTypes.object,\n\n  /**\n   * First view to show.\n   * Must be a valid option from `views` list\n   * @default 'day'\n   */\n  openTo: PropTypes.oneOf(['day', 'month', 'year']),\n\n  /**\n   * Force rendering in particular orientation.\n   */\n  orientation: PropTypes.oneOf(['landscape', 'portrait']),\n\n  /**\n   * Paper props passed down to [Paper](https://mui.com/material-ui/api/paper/) component.\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Popper props passed down to [Popper](https://mui.com/material-ui/api/popper/) component.\n   */\n  PopperProps: PropTypes.object,\n\n  /**\n   * Make picker read only.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Disable heavy animations.\n   * @default typeof navigator !== 'undefined' && /(android)/i.test(navigator.userAgent)\n   */\n  reduceAnimations: PropTypes.bool,\n\n  /**\n   * Custom renderer for day. Check the [PickersDay](https://mui.com/x/api/date-pickers/pickers-day/) component.\n   * @template TDate\n   * @param {TDate} day The day to render.\n   * @param {Array<TDate | null>} selectedDays The days currently selected.\n   * @param {PickersDayProps<TDate>} pickersDayProps The props of the day to render.\n   * @returns {JSX.Element} The element representing the day.\n   */\n  renderDay: PropTypes.func,\n\n  /**\n   * The `renderInput` prop allows you to customize the rendered input.\n   * The `props` argument of this render prop contains props of [TextField](https://mui.com/material-ui/api/text-field/#props) that you need to forward.\n   * Pay specific attention to the `ref` and `inputProps` keys.\n   * @example ```jsx\n   * renderInput={props => <TextField {...props} />}\n   * ````\n   * @param {MuiTextFieldPropsType} props The props of the input.\n   * @returns {React.ReactNode} The node to render as the input.\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Component displaying when passed `loading` true.\n   * @returns {React.ReactNode} The node to render when loading.\n   * @default () => <span data-mui-test=\"loading-progress\">...</span>\n   */\n  renderLoading: PropTypes.func,\n\n  /**\n   * Custom formatter to be passed into Rifm component.\n   * @param {string} str The un-formatted string.\n   * @returns {string} The formatted string.\n   */\n  rifmFormatter: PropTypes.func,\n\n  /**\n   * Right arrow icon aria-label text.\n   * @deprecated\n   */\n  rightArrowButtonText: PropTypes.string,\n\n  /**\n   * Disable specific date. @DateIOType\n   * @template TDate\n   * @param {TDate} day The date to test.\n   * @returns {boolean} Returns `true` if the date should be disabled.\n   */\n  shouldDisableDate: PropTypes.func,\n\n  /**\n   * Disable specific months dynamically.\n   * Works like `shouldDisableDate` but for month selection view @DateIOType.\n   * @template TDate\n   * @param {TDate} month The month to check.\n   * @returns {boolean} If `true` the month will be disabled.\n   */\n  shouldDisableMonth: PropTypes.func,\n\n  /**\n   * Disable specific years dynamically.\n   * Works like `shouldDisableDate` but for year selection view @DateIOType.\n   * @template TDate\n   * @param {TDate} year The year to test.\n   * @returns {boolean} Returns `true` if the year should be disabled.\n   */\n  shouldDisableYear: PropTypes.func,\n\n  /**\n   * If `true`, days that have `outsideCurrentMonth={true}` are displayed.\n   * @default false\n   */\n  showDaysOutsideCurrentMonth: PropTypes.bool,\n\n  /**\n   * If `true`, show the toolbar even in desktop mode.\n   */\n  showToolbar: PropTypes.bool,\n\n  /**\n   * Component that will replace default toolbar renderer.\n   * @default DatePickerToolbar\n   */\n  ToolbarComponent: PropTypes.elementType,\n\n  /**\n   * Date format, that is displaying in toolbar.\n   */\n  toolbarFormat: PropTypes.string,\n\n  /**\n   * Mobile picker date value placeholder, displaying if `value` === `null`.\n   * @default '–'\n   */\n  toolbarPlaceholder: PropTypes.node,\n\n  /**\n   * Mobile picker title, displaying in the toolbar.\n   * @default 'Select date'\n   */\n  toolbarTitle: PropTypes.node,\n\n  /**\n   * Custom component for popper [Transition](https://mui.com/material-ui/transitions/#transitioncomponent-prop).\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The value of the picker.\n   */\n  value: PropTypes.any,\n\n  /**\n   * Array of views to show.\n   * @default ['year', 'day']\n   */\n  views: PropTypes.arrayOf(PropTypes.oneOf(['day', 'month', 'year']).isRequired)\n} : void 0;","import { SvgIcon } from \"@mui/material\";\r\n\r\nconst ImageUploadIcon = props => {\r\n  return <SvgIcon viewBox=\"0 0 16 15\" {...props}>\r\n      <path d=\"M6.0299 5.69554C6.63699 5.69554 7.12914 5.2034 7.12914 4.59631C7.12914 3.98922 6.63699 3.49707 6.0299 3.49707C5.42281 3.49707 4.93066 3.98922 4.93066 4.59631C4.93066 5.2034 5.42281 5.69554 6.0299 5.69554Z\" fill=\"currentColor\" />\r\n      <path d=\"M15.0534 8.64122C14.5344 8.15267 13.8779 7.83206 13.1603 7.74046V2.15267C13.1603 1.55725 12.916 1.0229 12.5344 0.625954C12.1374 0.229008 11.6031 0 11.0076 0H2.15267C1.55725 0 1.0229 0.244275 0.625954 0.625954C0.229008 1.0229 0 1.55725 0 2.15267V9.19084V9.84733V11.2672C0 11.8626 0.244275 12.3969 0.625954 12.7939C1.0229 13.1908 1.55725 13.4198 2.15267 13.4198H10.7176C11.2824 13.8779 11.9847 14.1679 12.7634 14.1679C13.6641 14.1679 14.4733 13.8015 15.0534 13.2214C15.6336 12.6412 16 11.8321 16 10.9313C16 10.0305 15.6336 9.22137 15.0534 8.64122ZM0.80916 2.15267C0.80916 1.78626 0.961832 1.45038 1.20611 1.20611C1.45038 0.961832 1.78626 0.80916 2.15267 0.80916H11.0076C11.374 0.80916 11.7099 0.961832 11.9542 1.20611C12.1985 1.45038 12.3511 1.78626 12.3511 2.15267V6.91603L10.0916 4.67176C9.93893 4.51908 9.67939 4.50382 9.51145 4.67176L6.10687 8.0916L3.80153 5.77099C3.64885 5.61832 3.38931 5.60305 3.22137 5.77099L0.80916 8.21374V2.15267ZM2.1374 12.626V12.6107C1.77099 12.6107 1.43511 12.458 1.19084 12.2137C0.961832 11.9695 0.80916 11.6336 0.80916 11.2672V9.84733V9.35878L3.52672 6.64122L5.83206 8.94656C5.98473 9.09924 6.24427 9.09924 6.41221 8.94656L9.81679 5.52672L12.0458 7.77099C12 7.78626 11.9542 7.80153 11.9084 7.81679C11.8473 7.83206 11.7863 7.84733 11.7099 7.87786C11.6489 7.89313 11.5878 7.92366 11.5267 7.93893C11.4809 7.9542 11.4504 7.96947 11.4046 8C11.3435 8.03053 11.2977 8.0458 11.2519 8.07634C11.1756 8.12214 11.0992 8.16794 11.0229 8.21374C10.9771 8.24428 10.9466 8.25954 10.9008 8.29008C10.8702 8.30534 10.855 8.32061 10.8244 8.33588C10.687 8.42748 10.5649 8.53435 10.458 8.65649C9.87786 9.23664 9.51145 10.0458 9.51145 10.9466C9.51145 11.1756 9.54198 11.3893 9.58779 11.6183C9.60305 11.6794 9.61832 11.7252 9.63359 11.7863C9.67939 11.9389 9.72519 12.0916 9.78626 12.2443V12.2595C9.84733 12.3817 9.9084 12.5191 9.98473 12.626H2.1374ZM14.458 12.6412C14.0153 13.084 13.4198 13.3435 12.7481 13.3435C12.1069 13.3435 11.5114 13.084 11.084 12.6718C11.0229 12.6107 10.9618 12.5344 10.9008 12.4733C10.855 12.4275 10.8092 12.3664 10.7634 12.3206C10.7023 12.2443 10.6565 12.1527 10.6107 12.0611C10.5802 12 10.5496 11.9542 10.5191 11.8931C10.4886 11.8168 10.458 11.7252 10.4427 11.6336C10.4275 11.5725 10.3969 11.4962 10.3817 11.4351C10.3511 11.2824 10.3359 11.1145 10.3359 10.9466C10.3359 10.2748 10.6107 9.67939 11.0382 9.23664C11.4809 8.79389 12.0763 8.53435 12.7481 8.53435C13.4198 8.53435 14.0153 8.80916 14.458 9.23664C14.9008 9.66412 15.1603 10.2748 15.1603 10.9466C15.1603 11.6031 14.8855 12.1985 14.458 12.6412Z\" fill=\"currentColor\" />\r\n      <path d=\"M14.0758 10.5193H13.1445V9.588C13.1445 9.35899 12.9613 9.17578 12.7323 9.17578C12.5033 9.17578 12.3201 9.35899 12.3201 9.588V10.5193H11.3888C11.1598 10.5193 10.9766 10.7025 10.9766 10.9315C10.9766 11.1605 11.1598 11.3437 11.3888 11.3437H12.3201V12.275C12.3201 12.504 12.5033 12.6872 12.7323 12.6872C12.9613 12.6872 13.1445 12.504 13.1445 12.275V11.3437H14.0758C14.3048 11.3437 14.488 11.1605 14.488 10.9315C14.488 10.7025 14.3048 10.5193 14.0758 10.5193Z\" fill=\"currentColor\" />\r\n    </SvgIcon>;\r\n};\r\n\r\nexport default ImageUploadIcon;","import { IconButton } from \"@mui/material\";\r\nimport FlexRowAlign from \"components/flexbox/FlexRowAlign\";\r\nimport { Small } from \"components/Typography\";\r\nimport ImageUploadIcon from \"icons/ImageUploadIcon\";\r\nimport React from \"react\"; // ------------------------------------------------------------------\r\n\r\n// ------------------------------------------------------------------\r\nconst ImageUploadInput = ({\r\n  handleOnChange\r\n}) => {\r\n  return <label htmlFor=\"icon-button-file\">\r\n      <input type=\"file\" accept=\"image/*\" id=\"icon-button-file\" style={{\r\n      display: \"none\"\r\n    }} onChange={handleOnChange} />\r\n\r\n      <IconButton disableRipple component=\"span\" sx={{\r\n      padding: 0,\r\n      display: \"block\"\r\n    }}>\r\n        <FlexRowAlign gap={0.5} sx={{\r\n        minHeight: 40,\r\n        borderRadius: \"8px\",\r\n        backgroundColor: \"divider\"\r\n      }}>\r\n          <ImageUploadIcon sx={{\r\n          fontSize: 18,\r\n          color: \"text.disabled\"\r\n        }} />\r\n          <Small color=\"text.disabled\">Choose a file</Small>\r\n        </FlexRowAlign>\r\n      </IconButton>\r\n    </label>;\r\n};\r\n\r\nexport default ImageUploadInput;","import { Add } from \"@mui/icons-material\";\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\nimport { Avatar, Box, Button, Stack, styled } from \"@mui/material\";\r\nimport AppModal from \"components/AppModal\";\r\nimport FlexBox from \"components/flexbox/FlexBox\";\r\nimport AppTextField from \"components/input-fields/AppTextField\";\r\nimport ImageUploadInput from \"components/input-fields/ImageUploadInput\";\r\nimport { H6 } from \"components/Typography\";\r\nimport { useState } from \"react\"; // custom styled components\r\n\r\nconst StyledAppModal = styled(AppModal)(({\r\n  theme\r\n}) => ({\r\n  width: 400,\r\n  [theme.breakpoints.down(400)]: {\r\n    width: 300\r\n  }\r\n})); // -------------------------------------------------------------------\r\n\r\n// -------------------------------------------------------------------\r\nconst CreateProject = ({\r\n  open,\r\n  setOpen\r\n}) => {\r\n  const [date, setDate] = useState(new Date());\r\n  return <StyledAppModal open={open} handleClose={() => setOpen(false)}>\r\n      <Box mb={2}>\r\n        <H6 mb={1}>Project Name</H6>\r\n        <AppTextField fullWidth size=\"small\" placeholder=\"Project name\" />\r\n      </Box>\r\n\r\n      <Box mb={2}>\r\n        <H6 mb={1}>Deadline</H6>\r\n        <DatePicker value={date} onChange={newValue => setDate(newValue)} renderInput={params => <AppTextField fullWidth size=\"small\" inputProps={{\r\n        placeholder: \"Deadline Date\"\r\n      }} {...params} />} />\r\n      </Box>\r\n\r\n      <Box mb={2}>\r\n        <H6 mb={1}>Description</H6>\r\n        <AppTextField rows={2} fullWidth multiline size=\"small\" name=\"description\" placeholder=\"Description\" />\r\n      </Box>\r\n\r\n      <Box mb={2}>\r\n        <H6 mb={1}>Add Picture</H6>\r\n\r\n        <ImageUploadInput handleOnChange={() => {}} />\r\n      </Box>\r\n\r\n      <Box my={1}>\r\n        <H6 mb={1}>Team</H6>\r\n        <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n          <Button variant=\"dashed\">\r\n            <Add fontSize=\"small\" sx={{\r\n            color: \"grey.600\"\r\n          }} />\r\n          </Button>\r\n          <Avatar alt=\"Remy Sharp\" src=\"/static/user/user-7.png\" />\r\n          <Avatar alt=\"Travis Howard\" src=\"/static/user/user-6.png\" />\r\n          <Avatar alt=\"Cindy Baker\" src=\"/static/user/user-5.png\" />\r\n        </Stack>\r\n      </Box>\r\n\r\n      <FlexBox mt={4} gap={2}>\r\n        <Button variant=\"contained\" fullWidth>\r\n          Create\r\n        </Button>\r\n\r\n        <Button variant=\"outlined\" fullWidth onClick={() => setOpen(false)}>\r\n          Cancel\r\n        </Button>\r\n      </FlexBox>\r\n    </StyledAppModal>;\r\n};\r\n\r\nexport default CreateProject;"],"sourceRoot":""}