{"version":3,"sources":["pages/authentication/hashPassword.jsx","page-sections/authentication/RootLayout.jsx","../node_modules/@mui/material/Alert/alertClasses.js","../node_modules/@mui/material/internal/svg-icons/SuccessOutlined.js","../node_modules/@mui/material/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@mui/material/internal/svg-icons/ErrorOutline.js","../node_modules/@mui/material/internal/svg-icons/InfoOutlined.js","../node_modules/@mui/material/Alert/Alert.js","pages/authentication/new-password.jsx","components/input-fields/AppTextField.jsx","components/flexbox/FlexRowAlign.jsx","icons/BlankCheckBoxIcon.jsx","icons/CheckBoxIcon.jsx","components/AppCheckBox.jsx","../node_modules/@mui/material/internal/svg-icons/Close.js"],"names":["hashPassword","password","bcryptjs","genSalt","salt","hash","rehashPassword","rehashedPassword","RootLayout","children","imgLink","downMd","useMediaQuery","theme","breakpoints","down","container","height","item","md","xs","order","sx","padding","backgroundColor","width","alt","src","getAlertUtilityClass","slot","generateUtilityClass","alertClasses","generateUtilityClasses","createSvgIcon","_jsx","d","_excluded","AlertRoot","styled","Paper","name","overridesResolver","props","styles","ownerState","root","variant","capitalize","color","severity","getColor","palette","mode","darken","lighten","getBackgroundColor","_extends","typography","body2","display","vars","Alert","light","icon","main","border","fontWeight","fontWeightMedium","dark","getContrastText","AlertIcon","marginRight","fontSize","opacity","AlertMessage","message","minWidth","overflow","AlertAction","action","alignItems","marginLeft","defaultIconMapping","success","SuccessOutlinedIcon","warning","ReportProblemOutlinedIcon","error","ErrorOutlineIcon","info","InfoOutlinedIcon","React","inProps","ref","_ref","_slots$closeButton","_ref2","_slots$closeIcon","_slotProps$closeButto","_slotProps$closeIcon","useThemeProps","className","closeText","components","componentsProps","iconMapping","onClose","role","slotProps","slots","other","_objectWithoutPropertiesLoose","classes","composeClasses","useUtilityClasses","AlertCloseButton","closeButton","CloseButton","IconButton","AlertCloseIcon","closeIcon","CloseIcon","closeButtonProps","closeIconProps","_jsxs","elevation","clsx","size","title","onClick","NewPassword","useState","setPassword","confirmPassword","setConfirmPassword","agreed","setAgreed","state","useLocation","navigate","useNavigate","handleSubmit","event","preventDefault","console","log","sellerId","axios","post","then","response","status","setMessage","validatePassword","test","textAlign","maxWidth","mt","to","onSubmit","gap","fullWidth","label","type","value","autoComplete","onChange","password_1","target","confirmPassword_1","defaultChecked","agreed_0","checked","disabled","StyledTextField","TextField","borderRadius","borderColor","hover","text","AppTextField","FlexRowAlign","justifyContent","BlankCheckBoxIcon","viewBox","fill","CheckBoxIcon","fillRule","clipRule","AppCheckBox","disableRipple","checkedIcon"],"mappings":"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","file":"static/js/55.77e34e79.chunk.js","sourcesContent":["import bcryptjs from \"bcryptjs\";\r\n\r\nconst hashPassword = async (password) => {\r\n  const saltRounds = 10;\r\n  const salt = await bcryptjs.genSalt(saltRounds);\r\n  const hash = await bcryptjs.hash(password, salt);\r\n  return { hash, salt };\r\n};\r\n\r\nconst rehashPassword = async (password, salt) => {\r\n    const rehashedPassword = await bcryptjs.hash(password, salt);\r\n    return rehashedPassword;\r\n  };\r\n\r\nexport { hashPassword, rehashPassword };\r\n\r\n","import { Box, Grid, useMediaQuery } from \"@mui/material\";\r\nimport FlexRowAlign from \"components/flexbox/FlexRowAlign\";\r\n\r\n// --------------------------------------------------------------\r\nconst RootLayout = ({\r\n  children,\r\n  imgLink\r\n}) => {\r\n  const downMd = useMediaQuery(theme => theme.breakpoints.down(\"md\"));\r\n  return <Grid container height=\"100%\">\r\n      <Grid item md={6} xs={12} order={downMd ? 2 : 1}>\r\n        <FlexRowAlign sx={{\r\n        padding: 4,\r\n        height: \"100%\",\r\n        backgroundColor: \"grey.300\"\r\n      }}>\r\n          <Box>\r\n            <img width=\"100%\" alt=\"Forget Password\" src={imgLink} />\r\n          </Box>\r\n        </FlexRowAlign>\r\n      </Grid>\r\n\r\n      <Grid item md={6} xs={12} order={downMd ? 1 : 2}>\r\n        {children}\r\n      </Grid>\r\n    </Grid>;\r\n};\r\n\r\nexport default RootLayout;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getAlertUtilityClass(slot) {\n  return generateUtilityClass('MuiAlert', slot);\n}\nconst alertClasses = generateUtilityClasses('MuiAlert', ['root', 'action', 'icon', 'message', 'filled', 'filledSuccess', 'filledInfo', 'filledWarning', 'filledError', 'outlined', 'outlinedSuccess', 'outlinedInfo', 'outlinedWarning', 'outlinedError', 'standard', 'standardSuccess', 'standardInfo', 'standardWarning', 'standardError']);\nexport default alertClasses;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"children\", \"className\", \"closeText\", \"color\", \"components\", \"componentsProps\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"slotProps\", \"slots\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { darken, lighten } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport Paper from '../Paper';\nimport alertClasses, { getAlertUtilityClass } from './alertClasses';\nimport IconButton from '../IconButton';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    severity,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', `${variant}${capitalize(color || severity)}`, `${variant}`],\n    icon: ['icon'],\n    message: ['message'],\n    action: ['action']\n  };\n  return composeClasses(slots, getAlertUtilityClass, classes);\n};\nconst AlertRoot = styled(Paper, {\n  name: 'MuiAlert',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color || ownerState.severity)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const getColor = theme.palette.mode === 'light' ? darken : lighten;\n  const getBackgroundColor = theme.palette.mode === 'light' ? lighten : darken;\n  const color = ownerState.color || ownerState.severity;\n  return _extends({}, theme.typography.body2, {\n    backgroundColor: 'transparent',\n    display: 'flex',\n    padding: '6px 16px'\n  }, color && ownerState.variant === 'standard' && {\n    color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n    backgroundColor: theme.vars ? theme.vars.palette.Alert[`${color}StandardBg`] : getBackgroundColor(theme.palette[color].light, 0.9),\n    [`& .${alertClasses.icon}`]: theme.vars ? {\n      color: theme.vars.palette.Alert[`${color}IconColor`]\n    } : {\n      color: theme.palette[color].main\n    }\n  }, color && ownerState.variant === 'outlined' && {\n    color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n    border: `1px solid ${(theme.vars || theme).palette[color].light}`,\n    [`& .${alertClasses.icon}`]: theme.vars ? {\n      color: theme.vars.palette.Alert[`${color}IconColor`]\n    } : {\n      color: theme.palette[color].main\n    }\n  }, color && ownerState.variant === 'filled' && _extends({\n    fontWeight: theme.typography.fontWeightMedium\n  }, theme.vars ? {\n    color: theme.vars.palette.Alert[`${color}FilledColor`],\n    backgroundColor: theme.vars.palette.Alert[`${color}FilledBg`]\n  } : {\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette[color].dark : theme.palette[color].main,\n    color: theme.palette.getContrastText(theme.palette[color].main)\n  }));\n});\nconst AlertIcon = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => styles.icon\n})({\n  marginRight: 12,\n  padding: '7px 0',\n  display: 'flex',\n  fontSize: 22,\n  opacity: 0.9\n});\nconst AlertMessage = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0',\n  minWidth: 0,\n  overflow: 'auto'\n});\nconst AlertAction = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'flex-start',\n  padding: '4px 0 0 16px',\n  marginLeft: 'auto',\n  marginRight: -8\n});\nconst defaultIconMapping = {\n  success: /*#__PURE__*/_jsx(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/_jsx(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/_jsx(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/_jsx(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\nconst Alert = /*#__PURE__*/React.forwardRef(function Alert(inProps, ref) {\n  var _ref, _slots$closeButton, _ref2, _slots$closeIcon, _slotProps$closeButto, _slotProps$closeIcon;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAlert'\n  });\n  const {\n      action,\n      children,\n      className,\n      closeText = 'Close',\n      color,\n      components = {},\n      componentsProps = {},\n      icon,\n      iconMapping = defaultIconMapping,\n      onClose,\n      role = 'alert',\n      severity = 'success',\n      slotProps = {},\n      slots = {},\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    severity,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const AlertCloseButton = (_ref = (_slots$closeButton = slots.closeButton) != null ? _slots$closeButton : components.CloseButton) != null ? _ref : IconButton;\n  const AlertCloseIcon = (_ref2 = (_slots$closeIcon = slots.closeIcon) != null ? _slots$closeIcon : components.CloseIcon) != null ? _ref2 : CloseIcon;\n  const closeButtonProps = (_slotProps$closeButto = slotProps.closeButton) != null ? _slotProps$closeButto : componentsProps.closeButton;\n  const closeIconProps = (_slotProps$closeIcon = slotProps.closeIcon) != null ? _slotProps$closeIcon : componentsProps.closeIcon;\n  return /*#__PURE__*/_jsxs(AlertRoot, _extends({\n    role: role,\n    elevation: 0,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [icon !== false ? /*#__PURE__*/_jsx(AlertIcon, {\n      ownerState: ownerState,\n      className: classes.icon,\n      children: icon || iconMapping[severity] || defaultIconMapping[severity]\n    }) : null, /*#__PURE__*/_jsx(AlertMessage, {\n      ownerState: ownerState,\n      className: classes.message,\n      children: children\n    }), action != null ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: action\n    }) : null, action == null && onClose ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: /*#__PURE__*/_jsx(AlertCloseButton, _extends({\n        size: \"small\",\n        \"aria-label\": closeText,\n        title: closeText,\n        color: \"inherit\",\n        onClick: onClose\n      }, closeButtonProps, {\n        children: /*#__PURE__*/_jsx(AlertCloseIcon, _extends({\n          fontSize: \"small\"\n        }, closeIconProps))\n      }))\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The color of the component. Unless provided, the value is taken from the `severity` prop.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    CloseButton: PropTypes.elementType,\n    CloseIcon: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    closeButton: PropTypes.object,\n    closeIcon: PropTypes.object\n  }),\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   * Set to `false` to remove the `icon`.\n   */\n  icon: PropTypes.node,\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes.string,\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   * @default 'success'\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    closeButton: PropTypes.object,\n    closeIcon: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `components` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    closeButton: PropTypes.elementType,\n    closeIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default Alert;","import React, { useState } from \"react\";\r\nimport { Box, Button, Stack, Alert } from \"@mui/material\";\r\nimport AppCheckBox from \"components/AppCheckBox\";\r\nimport RootLayout from \"page-sections/authentication/RootLayout\";\r\nimport FlexBox from \"components/flexbox/FlexBox\";\r\nimport FlexRowAlign from \"components/flexbox/FlexRowAlign\";\r\nimport { H1, Paragraph, Small } from \"components/Typography\";\r\nimport AppTextField from \"components/input-fields/AppTextField\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { hashPassword } from './hashPassword';\r\nimport axios from \"axios\";\r\n\r\n\r\nconst NewPassword = (props) => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [agreed, setAgreed] = useState(false);\r\n\r\n  const { state } = useLocation();\r\n\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(state.sellerId);\r\n    const { hash, salt } = await hashPassword(password);\r\n    // console.log(state.sellerId);\r\n    // console.log(hash);\r\n    // console.log(salt);\r\n    // Code to handle submit action goes here\r\n    axios.post('http://192.168.29.120:5000/api/v1/tkseller/seller/sellersetpwd',\r\n      {\r\n        \"sellerId\": state.sellerId,\r\n        \"passwordSalt\": salt, \r\n        \"passwordHash\": hash, \r\n        \"loginAttempt\": 0\r\n      }\r\n    ).then((response) => {\r\n      if (response.status === 200) {\r\n        navigate(\"/dashboard\");\r\n      }\r\n    })\r\n  };\r\n\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const validatePassword = (password) => {\r\n    const passwordPattern = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,14}$/;\r\n    return passwordPattern.test(password);\r\n  };\r\n\r\n  return (\r\n    <RootLayout imgLink=\"/static/illustration/new-password.svg\">\r\n      <FlexRowAlign height=\"100%\">\r\n        <Box textAlign=\"center\" maxWidth={550} width=\"100%\" padding={4}>\r\n          <img src=\"/static/logo/kartlogo.png\" width={80} alt=\"Logo\" />\r\n          <H1 fontWeight={700} mt={2}>\r\n            Setup New Password\r\n          </H1>\r\n          <Paragraph color=\"text.disabled\" fontWeight={500}>\r\n            Already have reset you password?{\" \"}\r\n            <Link to=\"/login\">Sign In</Link>\r\n          </Paragraph>\r\n\r\n          <form onSubmit={handleSubmit}>\r\n            <Stack gap={3} mt={5}>\r\n              <AppTextField\r\n                fullWidth\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                value={password}\r\n                autoComplete=\"off\"\r\n                onChange={event => {\r\n                  const password_1 = event.target.value;\r\n                  setPassword(password_1);\r\n                  if (!validatePassword(event.target.value)) {\r\n                    setMessage(<Alert severity=\"info\">The password should contain atleast one number and one special character, should have atleast one upper case and lower case, and have a length of 8 to 14 characters!</Alert>);\r\n                  } else {\r\n                    setMessage(null);\r\n                  }\r\n                }}\r\n              />\r\n              <AppTextField\r\n                fullWidth\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                value={confirmPassword}\r\n                autoComplete=\"off\"\r\n                onChange={event => {\r\n                  const confirmPassword_1 = event.target.value;\r\n                  setConfirmPassword(confirmPassword_1);\r\n                  if (password !== event.target.value) {\r\n                    setMessage(<Alert severity=\"error\">Please make sure your passwords match!</Alert>);\r\n                  } else {\r\n                    setMessage(null);\r\n                  }\r\n                }}\r\n              />\r\n              {message}\r\n              <FlexBox alignItems=\"center\" gap={1}>\r\n                <AppCheckBox\r\n                  defaultChecked={agreed}\r\n                  onChange={(event) => {\r\n                    const agreed_0 = event.target.checked;\r\n                    setAgreed(agreed_0)\r\n                  }\r\n                  }\r\n                />\r\n                <Small fontSize={12}>\r\n                  I agree to the{\" \"}\r\n                  <Link to=\"#\">terms and conditions</Link>\r\n                </Small>\r\n              </FlexBox>\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                fullWidth\r\n                type=\"submit\"\r\n                disabled={\r\n                  password !== confirmPassword || !agreed || !validatePassword(password)\r\n                }\r\n                onClick={handleSubmit}\r\n              >\r\n                Submit\r\n              </Button>\r\n\r\n            </Stack>\r\n          </form>\r\n        </Box>\r\n      </FlexRowAlign>\r\n    </RootLayout>\r\n  );\r\n};\r\n\r\nexport default NewPassword;\r\n","import { styled, TextField } from \"@mui/material\";\r\nimport React from \"react\";\r\nconst StyledTextField = styled(TextField)(({\r\n  theme\r\n}) => ({\r\n  \"& .MuiOutlinedInput-input\": {\r\n    fontWeight: 500,\r\n    // color: theme.palette.text.primary,\r\n    height:\"0.em\",\r\n    \r\n  },\r\n  \"& .MuiOutlinedInput-notchedOutline\": {\r\n    borderRadius: \"8px\",\r\n    borderColor: theme.palette.action.disabled\r\n  },\r\n  \"& .MuiOutlinedInput-root.Mui-disabled .MuiOutlinedInput-notchedOutline\": {\r\n    borderColor: theme.palette.action.hover,\r\n    width:\"80%\"\r\n  },\r\n  \"& .MuiInputLabel-root\": {\r\n    fontWeight: 500,\r\n    color: theme.palette.text.disabled\r\n  },\r\n  \"& .MuiInputLabel-root.Mui-focused\": {\r\n    fontWeight: 600\r\n  },\r\n  \"& .MuiSvgIcon-root\": {\r\n    color: theme.palette.text.disabled\r\n  }\r\n}));\r\n\r\nconst AppTextField = props => {\r\n  return <StyledTextField {...props} />;\r\n};\r\n\r\nexport default AppTextField;","import { Box } from \"@mui/material\";\r\n\r\nconst FlexRowAlign = ({\r\n  children,\r\n  ...props\r\n}) => <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" {...props}>\r\n    {children}\r\n  </Box>;\r\n\r\nexport default FlexRowAlign;","import { SvgIcon } from \"@mui/material\";\r\n\r\nconst BlankCheckBoxIcon = props => {\r\n  return <SvgIcon viewBox=\"0 0 22 22\" {...props}>\r\n      <path d=\"M6 1.5H16V0.5H6V1.5ZM20.5 6V16H21.5V6H20.5ZM16 20.5H6V21.5H16V20.5ZM1.5 16V6H0.5V16H1.5ZM6 20.5C3.51472 20.5 1.5 18.4853 1.5 16H0.5C0.5 19.0376 2.96243 21.5 6 21.5V20.5ZM20.5 16C20.5 18.4853 18.4853 20.5 16 20.5V21.5C19.0376 21.5 21.5 19.0376 21.5 16H20.5ZM16 1.5C18.4853 1.5 20.5 3.51472 20.5 6H21.5C21.5 2.96243 19.0376 0.5 16 0.5V1.5ZM6 0.5C2.96243 0.5 0.5 2.96243 0.5 6H1.5C1.5 3.51472 3.51472 1.5 6 1.5V0.5Z\" fill=\"currentColor\" />\r\n    </SvgIcon>;\r\n};\r\n\r\nexport default BlankCheckBoxIcon;","import { SvgIcon } from \"@mui/material\";\r\n\r\nconst CheckBoxIcon = props => {\r\n  return <SvgIcon viewBox=\"0 0 20 20\" {...props}>\r\n      <path d=\"M0 5C0 2.23858 2.23858 0 5 0H15C17.7614 0 20 2.23858 20 5V15C20 17.7614 17.7614 20 15 20H5C2.23858 20 0 17.7614 0 15V5Z\" fill=\"currentColor\" />\r\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M14 8.2003L10.2608 11.8L9.01437 13L7.76797 11.8L7.77489 11.7933L6 10.0661L7.24674 8.8661L9.02129 10.5936L12.7536 7L14 8.2003Z\" fill=\"white\" />\r\n    </SvgIcon>;\r\n};\r\n\r\nexport default CheckBoxIcon;","import { Checkbox } from \"@mui/material\";\r\nimport BlankCheckBoxIcon from \"icons/BlankCheckBoxIcon\";\r\nimport CheckBoxIcon from \"icons/CheckBoxIcon\";\r\nimport React from \"react\";\r\n\r\nconst AppCheckBox = props => {\r\n  return <Checkbox {...props} disableRipple checkedIcon={<CheckBoxIcon fontSize=\"small\" color=\"primary\" />} icon={<BlankCheckBoxIcon fontSize=\"small\" color=\"disabled\" />} />;\r\n};\r\n\r\nexport default AppCheckBox;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n *\n * Alias to `Clear`.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');"],"sourceRoot":""}