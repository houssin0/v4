{"version":3,"sources":["pages/user-list/add-new-user.jsx","components/input-fields/AppTextField.jsx"],"names":["ButtonWrapper","styled","Box","width","height","display","borderRadius","alignItems","justifyContent","backgroundColor","theme","palette","action","disabledBackground","UploadButton","border","borderColor","background","paper","SwitchWrapper","marginTop","AddNewUser","validationSchema","Yup","shape","fullName","required","email","phone","min","country","state","city","address","zip","about","useFormik","initialValues","onSubmit","values","errors","handleChange","handleSubmit","touched","pt","pb","container","spacing","item","md","xs","sx","padding","minHeight","flexDirection","htmlFor","accept","id","type","style","component","fontSize","color","maxWidth","lineHeight","textAlign","marginBottom","fontWeight","defaultChecked","sm","fullWidth","name","label","value","onChange","error","Boolean","helperText","multiline","rows","variant","StyledTextField","TextField","disabled","hover","text","AppTextField","props"],"mappings":"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","file":"static/js/97.fc859335.chunk.js","sourcesContent":["import { PhotoCamera } from \"@mui/icons-material\";\r\nimport { Box, Button, Card, Grid, IconButton, styled, Switch } from \"@mui/material\";\r\nimport AppTextField from \"components/input-fields/AppTextField\";\r\nimport { Small, Tiny } from \"components/Typography\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\"; // styled components\r\n\r\nconst ButtonWrapper = styled(Box)(({\r\n  theme\r\n}) => ({\r\n  width: 100,\r\n  height: 100,\r\n  display: \"flex\",\r\n  borderRadius: \"50%\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  backgroundColor: theme.palette.action.disabledBackground\r\n}));\r\nconst UploadButton = styled(Box)(({\r\n  theme\r\n}) => ({\r\n  width: 50,\r\n  height: 50,\r\n  display: \"flex\",\r\n  borderRadius: \"50%\",\r\n  border: \"2px solid\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  borderColor: theme.palette.background.paper,\r\n  backgroundColor: theme.palette.action.disabledBackground\r\n}));\r\nconst SwitchWrapper = styled(Box)(() => ({\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  alignItems: \"center\",\r\n  width: \"100%\",\r\n  marginTop: 10\r\n}));\r\n\r\nconst AddNewUser = () => {\r\n  const initialValues = {\r\n    fullName: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    country: \"\",\r\n    state: \"\",\r\n    city: \"\",\r\n    address: \"\",\r\n    zip: \"\",\r\n    about: \"\"\r\n  };\r\n  const validationSchema = Yup.object().shape({\r\n    fullName: Yup.string().required(\"Name is Required!\"),\r\n    email: Yup.string().email().required(\"Email is Required!\"),\r\n    phone: Yup.number().min(8).required(\"Phone is Required!\"),\r\n    country: Yup.string().required(\"Country is Required!\"),\r\n    state: Yup.string().required(\"State is Required!\"),\r\n    city: Yup.string().required(\"City is Required!\"),\r\n    address: Yup.string().required(\"Address is Required!\"),\r\n    zip: Yup.string().required(\"Zip is Required!\"),\r\n    about: Yup.string().required(\"About is Required!\")\r\n  });\r\n  const {\r\n    values,\r\n    errors,\r\n    handleChange,\r\n    handleSubmit,\r\n    touched\r\n  } = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: () => {}\r\n  });\r\n  return <Box pt={2} pb={4}>\r\n      <Grid container spacing={3}>\r\n        <Grid item md={4} xs={12}>\r\n          <Card sx={{\r\n          padding: 3,\r\n          minHeight: 400,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\"\r\n        }}>\r\n            <ButtonWrapper>\r\n              <UploadButton>\r\n                <label htmlFor=\"upload-btn\">\r\n                  <input accept=\"image/*\" id=\"upload-btn\" type=\"file\" style={{\r\n                  display: \"none\"\r\n                }} />\r\n                  <IconButton component=\"span\">\r\n                    <PhotoCamera sx={{\r\n                    fontSize: 26,\r\n                    color: \"white\"\r\n                  }} />\r\n                  </IconButton>\r\n                </label>\r\n              </UploadButton>\r\n            </ButtonWrapper>\r\n\r\n            <Small marginTop={2} maxWidth={200} lineHeight={1.9} display=\"block\" textAlign=\"center\" color=\"text.secondary\">\r\n              Allowed *.jpeg, *.jpg, *.png, *.gif max size of 3.1 MB\r\n            </Small>\r\n\r\n            <Box maxWidth={250} marginTop={5} marginBottom={1}>\r\n              <SwitchWrapper>\r\n                <Small display=\"block\" fontWeight={600}>\r\n                  Public Profile\r\n                </Small>\r\n                <Switch defaultChecked />\r\n              </SwitchWrapper>\r\n\r\n              <SwitchWrapper>\r\n                <Small display=\"block\" fontWeight={600}>\r\n                  Banned\r\n                </Small>\r\n                <Switch defaultChecked />\r\n              </SwitchWrapper>\r\n              <Tiny display=\"block\" color=\"text.secondary\" fontWeight={500}>\r\n                Apply disable account\r\n              </Tiny>\r\n\r\n              <SwitchWrapper>\r\n                <Small display=\"block\" fontWeight={600}>\r\n                  Email Verified\r\n                </Small>\r\n                <Switch defaultChecked />\r\n              </SwitchWrapper>\r\n              <Tiny display=\"block\" color=\"text.secondary\" fontWeight={500}>\r\n                Disabling this will automatically send the user a verification\r\n                email\r\n              </Tiny>\r\n            </Box>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item md={8} xs={12}>\r\n          <Card sx={{\r\n          padding: 3\r\n        }}>\r\n            <form onSubmit={handleSubmit}>\r\n              <Grid container spacing={3}>\r\n                <Grid item sm={6} xs={12}>\r\n                  <AppTextField fullWidth name=\"fullName\" label=\"Full Name\" value={values.fullName} onChange={handleChange} error={Boolean(touched.fullName && errors.fullName)} helperText={touched.fullName && errors.fullName} />\r\n                </Grid>\r\n\r\n                <Grid item sm={6} xs={12}>\r\n                  <AppTextField fullWidth name=\"email\" label=\"Email Address\" value={values.email} onChange={handleChange} error={Boolean(touched.email && errors.email)} helperText={touched.email && errors.email} />\r\n                </Grid>\r\n\r\n                <Grid item sm={6} xs={12}>\r\n                  <AppTextField fullWidth name=\"phone\" label=\"Phone Number\" value={values.phone} onChange={handleChange} error={Boolean(touched.phone && errors.phone)} helperText={touched.phone && errors.phone} />\r\n                </Grid>\r\n\r\n                <Grid item sm={6} xs={12}>\r\n                  <AppTextField fullWidth name=\"country\" label=\"Country\" value={values.country} onChange={handleChange} error={Boolean(touched.country && errors.country)} helperText={touched.country && errors.country} />\r\n                </Grid>\r\n\r\n                <Grid item sm={6} xs={12}>\r\n                  <AppTextField fullWidth name=\"state\" label=\"State/Region\" value={values.state} onChange={handleChange} error={Boolean(touched.state && errors.state)} helperText={touched.state && errors.state} />\r\n                </Grid>\r\n\r\n                <Grid item sm={6} xs={12}>\r\n                  <AppTextField fullWidth name=\"city\" label=\"City\" value={values.city} onChange={handleChange} error={Boolean(touched.city && errors.city)} helperText={touched.city && errors.city} />\r\n                </Grid>\r\n\r\n                <Grid item sm={6} xs={12}>\r\n                  <AppTextField fullWidth name=\"address\" label=\"Address\" value={values.address} onChange={handleChange} error={Boolean(touched.address && errors.address)} helperText={touched.address && errors.address} />\r\n                </Grid>\r\n\r\n                <Grid item sm={6} xs={12}>\r\n                  <AppTextField fullWidth name=\"zip\" label=\"Zip/Code\" value={values.zip} onChange={handleChange} error={Boolean(touched.zip && errors.zip)} helperText={touched.zip && errors.zip} />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <AppTextField multiline fullWidth rows={10} name=\"about\" label=\"About\" value={values.about} onChange={handleChange} error={Boolean(touched.about && errors.about)} helperText={touched.about && errors.about} sx={{\r\n                  \"& .MuiOutlinedInput-root textarea\": {\r\n                    padding: 0\r\n                  }\r\n                }} />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <Button type=\"submit\" variant=\"contained\">\r\n                    Create User\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>;\r\n};\r\n\r\nexport default AddNewUser;","import { styled, TextField } from \"@mui/material\";\r\nimport React from \"react\";\r\nconst StyledTextField = styled(TextField)(({\r\n  theme\r\n}) => ({\r\n  \"& .MuiOutlinedInput-input\": {\r\n    fontWeight: 500,\r\n    // color: theme.palette.text.primary,\r\n    height:\"0.em\",\r\n    \r\n  },\r\n  \"& .MuiOutlinedInput-notchedOutline\": {\r\n    borderRadius: \"8px\",\r\n    borderColor: theme.palette.action.disabled\r\n  },\r\n  \"& .MuiOutlinedInput-root.Mui-disabled .MuiOutlinedInput-notchedOutline\": {\r\n    borderColor: theme.palette.action.hover,\r\n    width:\"80%\"\r\n  },\r\n  \"& .MuiInputLabel-root\": {\r\n    fontWeight: 500,\r\n    color: theme.palette.text.disabled\r\n  },\r\n  \"& .MuiInputLabel-root.Mui-focused\": {\r\n    fontWeight: 600\r\n  },\r\n  \"& .MuiSvgIcon-root\": {\r\n    color: theme.palette.text.disabled\r\n  }\r\n}));\r\n\r\nconst AppTextField = props => {\r\n  return <StyledTextField {...props} />;\r\n};\r\n\r\nexport default AppTextField;"],"sourceRoot":""}