{"version":3,"sources":["page-sections/pricing/PriceCard.jsx","pages/pricing-v2.jsx"],"names":["PriceCard","item","Card","Box","sx","padding","borderBottom","borderColor","fontWeight","title","color","subTitle","List","list","map","li","index","ListItem","px","ListItemIcon","CheckCircle","ListItemText","paddingTop","Button","fullWidth","variant","endIcon","ArrowForward","fontSize","btnText","TableHeadCell","styled","TableCell","borderBottomColor","theme","palette","divider","textAlign","TableBodyCell","text","secondary","border","priceList","tableData","Pricing","useTheme","py","pb","Grid","container","spacing","lg","md","xs","breakpoints","down","overflowX","Table","TableHead","TableRow","TableBody"],"mappings":"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","file":"static/js/101.cbb77278.chunk.js","sourcesContent":["import { ArrowForward, CheckCircle } from \"@mui/icons-material\";\r\nimport { Box, Button, Card, List, ListItem, ListItemIcon, ListItemText } from \"@mui/material\";\r\nimport { H1, H6 } from \"components/Typography\";\r\nimport React from \"react\"; // component props interface\r\n\r\nconst PriceCard = ({\r\n  item\r\n}) => {\r\n  return <Card>\r\n      <Box sx={{\r\n      padding: 4,\r\n      borderBottom: 1,\r\n      borderColor: \"divider\"\r\n    }}>\r\n        <H1 fontWeight={700}>{item.title}</H1>\r\n        <H6 color=\"text.disabled\">{item.subTitle}</H6>\r\n      </Box>\r\n\r\n      <Box padding={4}>\r\n        <List>\r\n          {item.list.map((li, index) => <ListItem sx={{\r\n          px: 0\r\n        }} key={index}>\r\n              <ListItemIcon>\r\n                <CheckCircle sx={{\r\n              color: \"primary.main\"\r\n            }} />\r\n              </ListItemIcon>\r\n              <ListItemText sx={{\r\n            \"& .MuiTypography-root\": {\r\n              fontWeight: 500,\r\n              color: \"text.disabled\"\r\n            }\r\n          }}>\r\n                {li}\r\n              </ListItemText>\r\n            </ListItem>)}\r\n        </List>\r\n      </Box>\r\n\r\n      <Box padding={4} paddingTop={0}>\r\n        <Button fullWidth variant=\"contained\" endIcon={<ArrowForward fontSize=\"large\" />}>\r\n          {item.btnText}\r\n        </Button>\r\n      </Box>\r\n    </Card>;\r\n};\r\n\r\nexport default PriceCard;","import { Box, Grid, Table, styled, TableRow, useTheme, TableBody, TableHead, TableCell } from \"@mui/material\";\r\nimport PriceCard from \"page-sections/pricing/PriceCard\";\r\nimport { H1, H6 } from \"components/Typography\";\r\n/// styled components\r\nconst TableHeadCell = styled(TableCell)(({\r\n  theme\r\n}) => ({\r\n  fontSize: 21,\r\n  fontWeight: 700,\r\n  borderBottomColor: theme.palette.divider,\r\n  \"&:not(:first-of-type)\": {\r\n    textAlign: \"center\"\r\n  }\r\n}));\r\nconst TableBodyCell = styled(TableCell)(({\r\n  theme\r\n}) => ({\r\n  fontWeight: 500,\r\n  color: theme.palette.text.secondary,\r\n  borderBottomColor: theme.palette.divider,\r\n  border: `1px solid ${theme.palette.divider}`,\r\n  \"&:not(:first-of-type)\": {\r\n    textAlign: \"center\"\r\n  },\r\n  \"&:last-of-type\": {\r\n    borderBottom: `1px solid ${theme.palette.divider}`\r\n  }\r\n}));\r\n\r\nconst Pricing = () => {\r\n  const theme = useTheme();\r\n  return <Box py={4}>\r\n      <Box textAlign=\"center\" pb={6}>\r\n        <H1 fontSize={36} fontWeight={700}>\r\n          A Great Experience is Priceless.\r\n        </H1>\r\n        <H6 color=\"text.secondary\" fontWeight={500}>\r\n          A better experience for developers creates a better experience for\r\n          users.\r\n        </H6>\r\n      </Box>\r\n\r\n      <Box pb={8}>\r\n        <Grid container spacing={3}>\r\n          {priceList.map((item, index) => <Grid item lg={4} md={6} xs={12} key={index}>\r\n              <PriceCard item={item} />\r\n            </Grid>)}\r\n        </Grid>\r\n      </Box>\r\n\r\n      <Box pb={6}>\r\n        <Box textAlign=\"center\" py={4}>\r\n          <H1 fontSize={36} fontWeight={700}>\r\n            Compare Plans\r\n          </H1>\r\n          <H6 color=\"text.secondary\" fontWeight={500}>\r\n            A better experience for developers creates a better experience for\r\n            users.\r\n          </H6>\r\n        </Box>\r\n\r\n        <Box sx={{\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n          overflowX: \"auto\"\r\n        }\r\n      }}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableHeadCell>Features</TableHeadCell>\r\n                <TableHeadCell>Hobby</TableHeadCell>\r\n                <TableHeadCell>Professional</TableHeadCell>\r\n                <TableHeadCell>Enterprise</TableHeadCell>\r\n              </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n              {tableData.map((item, index) => <TableRow key={index}>\r\n                  <TableBodyCell>{item[0]}</TableBodyCell>\r\n                  <TableBodyCell>{item[1]}</TableBodyCell>\r\n                  <TableBodyCell>{item[2]}</TableBodyCell>\r\n                  <TableBodyCell>{item[3]}</TableBodyCell>\r\n                </TableRow>)}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </Box>\r\n    </Box>;\r\n};\r\n\r\nconst priceList = [{\r\n  title: \"Hobby\",\r\n  subTitle: \"Free for non-commercial sites\",\r\n  list: [\"For non-commercial & hobby sites\", \"Deploy from CLI or personal git integrations\", \"Built-in CI/CD\", \"Previews for every git push\", \"Email support\"],\r\n  btnText: \"Deploy Hobby Project\"\r\n}, {\r\n  title: \"Professional\",\r\n  subTitle: \"$20/mo per member\",\r\n  list: [\"For non-commercial & hobby sites\", \"Deploy from CLI or personal git integrations\", \"Built-in CI/CD\", \"Previews for every git push\", \"Email support\"],\r\n  btnText: \"Start free 14 day pro trial\"\r\n}, {\r\n  title: \"Enterprise\",\r\n  subTitle: \"Suited to your business\",\r\n  list: [\"Maximize developer productivity\", \"SSO/SAML\", \"Scaled bandwidth pricing\", \"Isolated infrastructure for the fastest builds & zero queues\", \"Dedicated support manager & SLAs\"],\r\n  btnText: \"Contact Sales\"\r\n}];\r\nconst tableData = [[\"Bandwidth\", \"100 GB\", \"1 TB\", \"Custom\"], [\"Serverless Function Execution\", \"100 GB\", \"1,000 GB\", \"Custom\"], [\"Serverless Function Execution Timeout\", \"5 seconds\", \"15 seconds\", \"30 seconds\"], [\"Image Optimization\", \"1000\", \"5000\", \"Custom\"], [\"Multi-Region Serverless Functions\", \"\", \"\", \"Custom\"]];\r\nexport default Pricing;"],"sourceRoot":""}