{"version":3,"sources":["page-sections/invoice/columnShape.jsx","page-sections/invoice/fakeData.js","pages/invoice/invoice-list-v2.jsx","components/input-fields/SearchInput.jsx","../node_modules/@mui/system/esm/Box/Box.js","utils/utils.js","page-sections/data-table/dataTableV2/styledComponents.js","page-sections/admin-ecommerce/CustomTable.jsx","../node_modules/@mui/icons-material/esm/ArrowRightAlt.js","page-sections/user-list/ListHeader.jsx"],"names":["InvoiceColumnShape","Header","accessor","minWidth","Cell","row","original","avatar","name","position","FlexBox","alignItems","AppAvatar","src","alt","sx","mr","flexDirection","color","value","maxWidth","backgroundColor","toLowerCase","borderRadius","padding","invoiceFakeData","date","format","Date","id","amount","status","InvoiceListV2","navigate","useNavigate","useState","searchValue","setSearchValue","filteredItem","setFilteredItem","useEffect","result","searchByName","Box","pt","pb","ListHeader","buttonText","handleClick","mt","CustomTable","showFooter","hidePagination","data","rowClick","rowData","state","columnShape","StyledInputBase","styled","InputBase","theme","bordered","height","fontSize","width","fontWeight","palette","text","primary","background","paper","border","action","disabled","breakpoints","down","SearchInput","props","icon_style","startAdornment","marginRight","createBox","listData","length","filter","item","toLocaleLowerCase","match","StyledTableBodyRow","TableRow","selected_row","alpha","light","top","left","content","main","StyledPagination","Pagination","margin","StyledSearchInput","StyledSearchIcon","SearchIcon","marginLeft","tableData","useMemo","columns","useTable","useSortBy","useExpanded","usePagination","useRowSelect","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","pageOptions","gotoPage","borderSpacing","borderCollapse","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","paddingY","borderBottom","textAlign","render","getRowProps","onClick","cursor","borderLeft","borderTopLeftRadius","borderBottomLeftRadius","borderRight","borderTopRightRadius","borderBottomRightRadius","cells","cell","getCellProps","paddingLeft","paddingRight","marginY","count","shape","onChange","_e","currentPageNo","gap","disableRipple","createSvgIcon","_jsx","d","StyledFlexBox","FlexBetween","flexWrap","marginBottom","marginTop","t","useTranslation","placeholder","e","target","variant"],"mappings":"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","file":"static/js/66.b43a0217.chunk.js","sourcesContent":["import AppAvatar from \"components/avatars/AppAvatar\";\r\nimport FlexBox from \"components/flexbox/FlexBox\";\r\nimport { H6, Small, Tiny } from \"components/Typography\";\r\nconst InvoiceColumnShape = [{\r\n  Header: \"Client\",\r\n  accessor: \"client\",\r\n  minWidth: 200,\r\n  Cell: ({\r\n    row\r\n  }) => {\r\n    const {\r\n      avatar,\r\n      name,\r\n      position\r\n    } = row.original;\r\n    return <FlexBox alignItems=\"center\">\r\n          <AppAvatar src={avatar} alt={name} sx={{\r\n        mr: 1\r\n      }} />\r\n          <FlexBox flexDirection=\"column\">\r\n            <H6 color=\"text.primary\">{name}</H6>\r\n            <Tiny color=\"text.disabled\">{position}</Tiny>\r\n          </FlexBox>\r\n        </FlexBox>;\r\n  }\r\n}, {\r\n  Header: \"Name\",\r\n  accessor: \"name\",\r\n  minWidth: 200\r\n}, {\r\n  Header: \"Date\",\r\n  accessor: \"date\",\r\n  minWidth: 150\r\n}, {\r\n  Header: \"Amount\",\r\n  accessor: \"amount\",\r\n  minWidth: 150,\r\n  Cell: ({\r\n    value\r\n  }) => <Small>${value}</Small>\r\n}, {\r\n  Header: \"Status\",\r\n  accessor: \"status\",\r\n  minWidth: 130,\r\n  maxWidth: 130,\r\n  Cell: ({\r\n    value\r\n  }) => <Small sx={{\r\n    backgroundColor: value.toLowerCase() === \"paid\" ? \"success.main\" : \"error.main\",\r\n    color: \"background.paper\",\r\n    borderRadius: 10,\r\n    padding: \".2rem 1rem\"\r\n  }}>\r\n        {value}\r\n      </Small>\r\n}];\r\nexport default InvoiceColumnShape;","import { format } from \"date-fns\";\r\nexport const invoiceFakeData = [{\r\n  date: format(new Date(2021, 11, 2), \"MMM dd, yyyy\"),\r\n  id: \"615193a4c7e1363df77b9929\",\r\n  name: \"Natalie Dormer\",\r\n  position: \"UI Designer\",\r\n  amount: 450,\r\n  avatar: \"/static/avatar/001-man.svg\",\r\n  status: \"Unpaid\"\r\n}, {\r\n  date: format(new Date(2021, 10, 2), \"MMM dd, yyyy\"),\r\n  id: \"615193bab7b256189c6fe997\",\r\n  name: \"Kyle Williams\",\r\n  position: \"Developer\",\r\n  amount: 280,\r\n  avatar: \"/static/avatar/005-man-1.svg\",\r\n  status: \"Unpaid\"\r\n}, {\r\n  date: format(new Date(2021, 10, 2), \"MMM dd, yyyy\"),\r\n  id: \"615193d64696d4665abb8ea5\",\r\n  name: \"Alan Mask\",\r\n  position: \"Marketer\",\r\n  amount: 120,\r\n  avatar: \"/static/avatar/014-man-3.svg\",\r\n  status: \"Unpaid\"\r\n}];","import { Box } from \"@mui/system\";\r\nimport CustomTable from \"page-sections/admin-ecommerce/CustomTable\";\r\nimport InvoiceColumnShape from \"page-sections/invoice/columnShape\";\r\nimport { invoiceFakeData } from \"page-sections/invoice/fakeData\";\r\nimport ListHeader from \"page-sections/user-list/ListHeader\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { searchByName } from \"utils/utils\";\r\n\r\nconst InvoiceListV2 = () => {\r\n  const navigate = useNavigate(); // search input\r\n\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [filteredItem, setFilteredItem] = useState(invoiceFakeData);\r\n\r\n  const handleRowClick = rowData => () => {\r\n    navigate(\"/dashboards/invoice-details-v2\", {\r\n      state: rowData\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const result = searchByName(invoiceFakeData, searchValue);\r\n    setFilteredItem(result);\r\n  }, [searchValue]);\r\n  return <Box pt={2} pb={4}>\r\n      <ListHeader buttonText=\"Add New\" setSearchValue={setSearchValue} handleClick={() => navigate(\"/dashboards/create-invoice\")} />\r\n\r\n      <Box mt={2}>\r\n        <CustomTable showFooter hidePagination data={filteredItem} rowClick={handleRowClick} columnShape={InvoiceColumnShape} />\r\n      </Box>\r\n    </Box>;\r\n};\r\n\r\nexport default InvoiceListV2;","import { InputBase, styled } from \"@mui/material\";\r\nimport SearchIcon from \"icons/SearchIcon\";\r\n// styled component\r\nconst StyledInputBase = styled(InputBase)(({\r\n  theme,\r\n  bordered\r\n}) => ({\r\n  height: 45,\r\n  fontSize: 12,\r\n  width: \"100%\",\r\n  maxWidth: 350,\r\n  fontWeight: 600,\r\n  padding: \"0 1rem\",\r\n  borderRadius: \"8px\",\r\n  color: theme.palette.text.primary,\r\n  backgroundColor: theme.palette.background.paper,\r\n  border: bordered ? `1px solid ${theme.palette.action.disabled}` : \"none\",\r\n  [theme.breakpoints.down(500)]: {\r\n    maxWidth: \"100%\"\r\n  },\r\n  \"::placeholder\": {\r\n    color: theme.palette.text.disabled\r\n  }\r\n})); // ------------------------------------------------------------\r\n\r\n// ------------------------------------------------------------\r\nconst SearchInput = props => {\r\n  const {\r\n    icon_style = {},\r\n    bordered = true\r\n  } = props;\r\n  return <StyledInputBase bordered={bordered} startAdornment={<SearchIcon sx={{\r\n    fontSize: 18,\r\n    marginRight: 1,\r\n    color: \"text.disabled\",\r\n    ...icon_style\r\n  }} />} {...props} />;\r\n};\r\n\r\nexport default SearchInput;","import PropTypes from 'prop-types';\nimport createBox from '../createBox';\nconst Box = createBox();\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","export const searchByName = (listData, searchValue) => {\r\n  if (searchValue.length > 0) {\r\n    const searchResult = listData.filter(item => item.name.toLocaleLowerCase().match(searchValue.toLowerCase()));\r\n    return searchResult;\r\n  } else {\r\n    return listData;\r\n  }\r\n};\r\nexport const getRoute = pathname => {\r\n  const str = pathname.split(\"/\");\r\n  return `/${str[1]}`;\r\n};","import { alpha, InputBase, Pagination, styled, TableRow } from \"@mui/material\";\r\nimport SearchIcon from \"icons/SearchIcon\";\r\nexport const StyledTableBodyRow = styled(TableRow)(({\r\n  theme,\r\n  selected_row\r\n}) => selected_row === \"select\" ? {\r\n  backgroundColor: alpha(theme.palette.primary.light, 0.5),\r\n  position: \"relative\",\r\n  \"&::after\": {\r\n    top: 0,\r\n    left: 0,\r\n    width: \"3px\",\r\n    content: '\"\"',\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    backgroundColor: theme.palette.primary.main\r\n  }\r\n} : {});\r\nexport const StyledPagination = styled(Pagination)(({\r\n  theme\r\n}) => ({\r\n  \"& .MuiPaginationItem-root\": {\r\n    fontSize: 12,\r\n    fontWeight: 500,\r\n    color: theme.palette.text.disabled\r\n  },\r\n  \"& .MuiPaginationItem-page:hover\": {\r\n    borderRadius: 20,\r\n    backgroundColor: \"transparent\",\r\n    color: theme.palette.primary.main,\r\n    border: `1px solid ${theme.palette.primary.main}`\r\n  },\r\n  \"& .MuiPaginationItem-page.Mui-selected\": {\r\n    borderRadius: 20,\r\n    backgroundColor: \"transparent\",\r\n    color: theme.palette.primary.main,\r\n    border: `1px solid ${theme.palette.primary.main}`\r\n  },\r\n  \"& .MuiPaginationItem-previousNext\": {\r\n    margin: 10,\r\n    borderRadius: 20,\r\n    color: theme.palette.primary.main,\r\n    border: `1px solid ${theme.palette.primary.main}`,\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\"\r\n    }\r\n  }\r\n}));\r\nexport const StyledSearchInput = styled(InputBase)(({\r\n  theme\r\n}) => ({\r\n  height: 40,\r\n  fontSize: 12,\r\n  maxWidth: 450,\r\n  width: \"100%\",\r\n  fontWeight: 500,\r\n  padding: \"0.5rem\",\r\n  borderRadius: \"4px\",\r\n  backgroundColor: \"white\",\r\n  color: theme.palette.text.primary\r\n}));\r\nexport const StyledSearchIcon = styled(SearchIcon)(({\r\n  theme\r\n}) => ({\r\n  fontSize: 16,\r\n  marginLeft: \"0.5rem\",\r\n  marginRight: \"0.5rem\",\r\n  color: theme.palette.primary.main\r\n}));","import { ArrowRightAlt } from \"@mui/icons-material\";\r\nimport { Box, Stack, Table, TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\r\nimport ButtonBase from \"@mui/material/ButtonBase\";\r\nimport FlexBetween from \"components/flexbox/FlexBetween\";\r\nimport { H5 } from \"components/Typography\";\r\nimport { StyledPagination } from \"page-sections/data-table/dataTableV2/styledComponents\";\r\nimport { useMemo } from \"react\";\r\nimport { useExpanded, usePagination, useRowSelect, useSortBy, useTable } from \"react-table\";\r\nimport ScrollBar from \"simplebar-react\"; // component props interface\r\n\r\nconst CustomTable = props => {\r\n  const {\r\n    data,\r\n    rowClick,\r\n    showFooter,\r\n    columnShape,\r\n    hidePagination\r\n  } = props; // hooks\r\n\r\n  const tableData = useMemo(() => data, [data]);\r\n  const columns = useMemo(() => columnShape, [columnShape]);\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    pageOptions,\r\n    gotoPage\r\n  } = useTable({\r\n    columns,\r\n    data: tableData\r\n  }, useSortBy, useExpanded, usePagination, useRowSelect); // handle pagination\r\n\r\n  const handleChange = (_e, currentPageNo) => {\r\n    gotoPage(currentPageNo - 1);\r\n  };\r\n\r\n  return <Box>\r\n      <ScrollBar>\r\n        <Table {...getTableProps()} sx={{\r\n        borderSpacing: \"0 1rem\",\r\n        borderCollapse: \"separate\"\r\n      }}>\r\n          <TableHead>\r\n            {headerGroups.map(headerGroup => <TableRow {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => <TableCell {...column.getHeaderProps(column.getSortByToggleProps())} sx={{\r\n              paddingY: 0,\r\n              fontSize: 12,\r\n              fontWeight: 600,\r\n              borderBottom: 0,\r\n              width: column.width,\r\n              color: \"text.secondary\",\r\n              minWidth: column.minWidth,\r\n              maxWidth: column.maxWidth,\r\n              \"&:last-child\": {\r\n                textAlign: \"center\"\r\n              }\r\n            }}>\r\n                    {column.render(\"Header\")}\r\n                  </TableCell>)}\r\n              </TableRow>)}\r\n          </TableHead>\r\n\r\n          <TableBody {...getTableBodyProps()}>\r\n            {page.map(row => {\r\n            prepareRow(row);\r\n            return <TableRow {...row.getRowProps()} onClick={rowClick && rowClick(row.original)} sx={{\r\n              backgroundColor: \"background.paper\",\r\n              cursor: rowClick ? \"pointer\" : \"unset\",\r\n              \"& td:first-of-type\": {\r\n                borderLeft: \"0\",\r\n                borderTopLeftRadius: \"8px\",\r\n                borderBottomLeftRadius: \"8px\"\r\n              },\r\n              \"& td:last-of-type\": {\r\n                borderRight: \"0\",\r\n                textAlign: \"center\",\r\n                borderTopRightRadius: \"8px\",\r\n                borderBottomRightRadius: \"8px\"\r\n              }\r\n            }}>\r\n                  {row.cells.map(cell => {\r\n                return <TableCell {...cell.getCellProps()} sx={{\r\n                  border: 0,\r\n                  fontSize: 13,\r\n                  fontWeight: 500,\r\n                  color: \"text.secondary\",\r\n                  \"&:first-child\": {\r\n                    paddingLeft: \"16px\"\r\n                  },\r\n                  \"&:last-child\": {\r\n                    paddingRight: \"16px\"\r\n                  }\r\n                }}>\r\n                        {cell.render(\"Cell\")}\r\n                      </TableCell>;\r\n              })}\r\n                </TableRow>;\r\n          })}\r\n          </TableBody>\r\n        </Table>\r\n      </ScrollBar>\r\n\r\n      {!hidePagination && <Stack alignItems=\"flex-end\" marginY={1}>\r\n          <StyledPagination count={pageOptions.length} shape=\"rounded\" onChange={handleChange} />\r\n        </Stack>}\r\n\r\n      {showFooter && <FlexBetween gap={0.5}>\r\n          <H5 color=\"text.secondary\" fontSize={13}>\r\n            Showing 1-12 of 24 result\r\n          </H5>\r\n          <ButtonBase disableRipple sx={{\r\n        fontSize: 13,\r\n        fontWeight: 600,\r\n        color: \"text.secondary\"\r\n      }}>\r\n            See All\r\n            <ArrowRightAlt />\r\n          </ButtonBase>\r\n        </FlexBetween>}\r\n    </Box>;\r\n};\r\n\r\nexport default CustomTable;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.01 11H4v2h12.01v3L20 12l-3.99-4z\"\n}), 'ArrowRightAlt');","import { Button, styled } from \"@mui/material\";\r\nimport FlexBetween from \"components/flexbox/FlexBetween\";\r\nimport SearchInput from \"components/input-fields/SearchInput\";\r\nimport { useTranslation } from \"react-i18next\"; // styled component\r\n\r\nconst StyledFlexBox = styled(FlexBetween)(({\r\n  theme\r\n}) => ({\r\n  flexWrap: \"wrap\",\r\n  marginBottom: 20,\r\n  [theme.breakpoints.down(500)]: {\r\n    width: \"100%\",\r\n    \"& .MuiInputBase-root\": {\r\n      maxWidth: \"100%\"\r\n    },\r\n    \"& .MuiButton-root\": {\r\n      width: \"100%\",\r\n      marginTop: 15\r\n    }\r\n  }\r\n})); // -----------------------------------------------------------\r\n\r\n// -----------------------------------------------------------\r\nconst ListHeader = ({\r\n  handleClick,\r\n  setSearchValue,\r\n  buttonText = \"Add New User\"\r\n}) => {\r\n  const {\r\n    t\r\n  } = useTranslation();\r\n  return <StyledFlexBox>\r\n      <SearchInput bordered={false} placeholder=\"Search...\" onChange={e => setSearchValue(e.target.value)} />\r\n\r\n      <Button variant=\"contained\" onClick={handleClick}>\r\n        {t(buttonText)}\r\n      </Button>\r\n    </StyledFlexBox>;\r\n};\r\n\r\nexport default ListHeader;"],"sourceRoot":""}