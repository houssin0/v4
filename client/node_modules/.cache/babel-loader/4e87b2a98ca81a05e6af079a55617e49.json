{"ast":null,"code":"var _jsxFileName = \"/workspaces/v4/src/page-sections/accounts/account/Notifications.jsx\";\nimport { KeyboardArrowDown } from \"@mui/icons-material\";\nimport { Box, Button, Card, Stack, Table } from \"@mui/material\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport AppCheckBox from \"components/AppCheckBox\";\nimport Scrollbar from \"components/ScrollBar\";\nimport { H5, Tiny } from \"components/Typography\";\nimport AppTextField from \"components/input-fields/AppTextField\";\nimport { lightTheme } from \"../../../constants\";\nimport { BodyTableCell, HeadTableCell } from \"./common/StyledComponents\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notifications = () => {\n  const tableHeadColor = theme => lightTheme(theme) ? \"primary.100\" : \"divider\";\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      padding: 3,\n      children: [/*#__PURE__*/_jsxDEV(H5, {\n        children: \"Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tiny, {\n        mt: 1,\n        fontWeight: 500,\n        children: \"We need permission from your browser to show notifications. Request permission\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n      autoHide: false,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 600\n        },\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          sx: {\n            backgroundColor: theme => tableHeadColor(theme)\n          },\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(HeadTableCell, {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HeadTableCell, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HeadTableCell, {\n              children: \"Browser\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HeadTableCell, {\n              children: \"App\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: notificationSettings.map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(BodyTableCell, {\n              children: item.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(BodyTableCell, {\n              children: /*#__PURE__*/_jsxDEV(AppCheckBox, {\n                defaultChecked: item.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(BodyTableCell, {\n              children: /*#__PURE__*/_jsxDEV(AppCheckBox, {\n                defaultChecked: item.browser\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(BodyTableCell, {\n              children: /*#__PURE__*/_jsxDEV(AppCheckBox, {\n                defaultChecked: item.app\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 47\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      padding: 3,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mb: 6,\n        mt: 2,\n        children: [/*#__PURE__*/_jsxDEV(AppTextField, {\n          select: true,\n          fullWidth: true,\n          label: \"When should we send you notifications?\",\n          variant: \"outlined\",\n          placeholder: \"Language\",\n          value: \"always\",\n          SelectProps: {\n            native: true,\n            IconComponent: KeyboardArrowDown\n          },\n          sx: {\n            maxWidth: 400\n          },\n          children: /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"always\",\n            children: \"Always\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tiny, {\n          fontWeight: 500,\n          mt: 2,\n          children: \"In order to cut back on noise, email notifications are grouped together and only sent when you're idle or offline.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n};\n_c = Notifications;\nconst notificationSettings = [{\n  id: 1,\n  type: \"New for you\",\n  email: true,\n  browser: false,\n  app: false\n}, {\n  id: 2,\n  type: \"Account activity\",\n  email: true,\n  browser: true,\n  app: true\n}, {\n  id: 3,\n  type: \"A new browser used to sign in\",\n  email: true,\n  browser: true,\n  app: true\n}, {\n  id: 4,\n  type: \"A new device is linked\",\n  email: false,\n  browser: true,\n  app: false\n}, {\n  id: 5,\n  type: \"A new device connected\",\n  email: true,\n  browser: false,\n  app: false\n}];\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["KeyboardArrowDown","Box","Button","Card","Stack","Table","TableBody","TableHead","TableRow","AppCheckBox","Scrollbar","H5","Tiny","AppTextField","lightTheme","BodyTableCell","HeadTableCell","Notifications","tableHeadColor","theme","minWidth","backgroundColor","notificationSettings","map","item","type","email","browser","app","id","native","IconComponent","maxWidth"],"sources":["/workspaces/v4/src/page-sections/accounts/account/Notifications.jsx"],"sourcesContent":["import { KeyboardArrowDown } from \"@mui/icons-material\";\nimport { Box, Button, Card, Stack, Table } from \"@mui/material\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport AppCheckBox from \"components/AppCheckBox\";\nimport Scrollbar from \"components/ScrollBar\";\nimport { H5, Tiny } from \"components/Typography\";\nimport AppTextField from \"components/input-fields/AppTextField\";\nimport { lightTheme } from \"../../../constants\";\nimport { BodyTableCell, HeadTableCell } from \"./common/StyledComponents\";\n\nconst Notifications = () => {\n  const tableHeadColor = theme => lightTheme(theme) ? \"primary.100\" : \"divider\";\n\n  return <Card>\n      <Box padding={3}>\n        <H5>Notifications</H5>\n        <Tiny mt={1} fontWeight={500}>\n          We need permission from your browser to show notifications. Request\n          permission\n        </Tiny>\n      </Box>\n\n      <Scrollbar autoHide={false}>\n        <Table sx={{\n        minWidth: 600\n      }}>\n          <TableHead sx={{\n          backgroundColor: theme => tableHeadColor(theme)\n        }}>\n            <TableRow>\n              <HeadTableCell>Type</HeadTableCell>\n              <HeadTableCell>Email</HeadTableCell>\n              <HeadTableCell>Browser</HeadTableCell>\n              <HeadTableCell>App</HeadTableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {notificationSettings.map(item => <TableRow key={item.id}>\n                <BodyTableCell>{item.type}</BodyTableCell>\n                <BodyTableCell>\n                  <AppCheckBox defaultChecked={item.email} />\n                </BodyTableCell>\n                <BodyTableCell>\n                  <AppCheckBox defaultChecked={item.browser} />\n                </BodyTableCell>\n                <BodyTableCell>\n                  <AppCheckBox defaultChecked={item.app} />\n                </BodyTableCell>\n              </TableRow>)}\n          </TableBody>\n        </Table>\n      </Scrollbar>\n\n      <Box padding={3}>\n        <Box mb={6} mt={2}>\n          <AppTextField select fullWidth label=\"When should we send you notifications?\" variant=\"outlined\" placeholder=\"Language\" value=\"always\" SelectProps={{\n          native: true,\n          IconComponent: KeyboardArrowDown\n        }} sx={{\n          maxWidth: 400\n        }}>\n            <option value=\"always\">Always</option>\n          </AppTextField>\n\n          <Tiny fontWeight={500} mt={2}>\n            In order to cut back on noise, email notifications are grouped\n            together and only sent when you're idle or offline.\n          </Tiny>\n        </Box>\n\n        <Stack direction=\"row\" spacing={2}>\n          <Button variant=\"contained\">Save Changes</Button>\n          <Button variant=\"outlined\">Cancel</Button>\n        </Stack>\n      </Box>\n    </Card>;\n};\n\nconst notificationSettings = [{\n  id: 1,\n  type: \"New for you\",\n  email: true,\n  browser: false,\n  app: false\n}, {\n  id: 2,\n  type: \"Account activity\",\n  email: true,\n  browser: true,\n  app: true\n}, {\n  id: 3,\n  type: \"A new browser used to sign in\",\n  email: true,\n  browser: true,\n  app: true\n}, {\n  id: 4,\n  type: \"A new device is linked\",\n  email: false,\n  browser: true,\n  app: false\n}, {\n  id: 5,\n  type: \"A new device connected\",\n  email: true,\n  browser: false,\n  app: false\n}];\nexport default Notifications;"],"mappings":"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"},"metadata":{},"sourceType":"module"}