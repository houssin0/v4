{"ast":null,"code":"var _jsxFileName = \"/workspaces/v4/src/pages/diseases-dermatologie/add-new-disease.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Button, Card, Grid, TextField, Typography } from \"@mui/material\";\nimport { FC } from \"react\";\nimport { useFormik } from \"formik\";\nimport { useNavigate } from \"react-router-dom\";\nimport toast from \"react-hot-toast\";\nimport useTitle from \"hooks/useTitle\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddNewDisease = () => {\n  _s();\n  const navigate = useNavigate();\n  const initialValues = {\n    title: \"\",\n    description: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required(\"Title is Required!\"),\n    description: Yup.string().required(\"Description is Required!\")\n  });\n  const {\n    values,\n    errors,\n    handleChange,\n    handleSubmit,\n    touched\n  } = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit: async values => {\n      console.log(\"Form Values:\", values); // Log form values\n      // Here you can dispatch an action to add the new disease to your database or state\n      toast.success(\"New disease added successfully\", {\n        duration: 4000\n      });\n      navigate(\"/dashboard/disease-grid\"); // Redirect to disease list page after adding\n    }\n  });\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    pt: 2,\n    pb: 4,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        padding: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Add New Disease\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              name: \"title\",\n              label: \"Disease Title\",\n              value: values.title,\n              onChange: handleChange,\n              error: Boolean(touched.title && errors.title),\n              helperText: touched.title && errors.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              multiline: true,\n              rows: 4,\n              name: \"description\",\n              label: \"Description\",\n              value: values.description,\n              onChange: handleChange,\n              error: Boolean(touched.description && errors.description),\n              helperText: touched.description && errors.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              children: \"Add Disease\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(AddNewDisease, \"dAhWrH07zLXpFvHIlrvkFahq0vs=\", false, function () {\n  return [useNavigate, useFormik];\n});\n_c = AddNewDisease;\nexport default AddNewDisease;\nvar _c;\n$RefreshReg$(_c, \"AddNewDisease\");","map":{"version":3,"names":["Box","Button","Card","Grid","TextField","Typography","FC","useFormik","useNavigate","toast","useTitle","Yup","AddNewDisease","navigate","initialValues","title","description","validationSchema","object","shape","string","required","values","errors","handleChange","handleSubmit","touched","onSubmit","console","log","success","duration","padding","Boolean"],"sources":["/workspaces/v4/src/pages/diseases-dermatologie/add-new-disease.jsx"],"sourcesContent":["import { Box, Button, Card, Grid, TextField, Typography } from \"@mui/material\";\nimport { FC } from \"react\";\nimport { useFormik } from \"formik\";\nimport { useNavigate } from \"react-router-dom\";\nimport toast from \"react-hot-toast\";\nimport useTitle from \"hooks/useTitle\";\nimport * as Yup from \"yup\";\n\nconst AddNewDisease = () => {\n  const navigate = useNavigate();\n\n  const initialValues = {\n    title: \"\",\n    description: \"\",\n  };\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required(\"Title is Required!\"),\n    description: Yup.string().required(\"Description is Required!\"),\n  });\n\n  const { values, errors, handleChange, handleSubmit, touched } = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit: async (values) => {\n      console.log(\"Form Values:\", values); // Log form values\n      // Here you can dispatch an action to add the new disease to your database or state\n      toast.success(\"New disease added successfully\", { duration: 4000 });\n      navigate(\"/dashboard/disease-grid\"); // Redirect to disease list page after adding\n    },\n  });\n\n  return (\n    <Box pt={2} pb={4}>\n      <Card sx={{ padding: 4 }}>\n        <Typography variant=\"h5\" gutterBottom>Add New Disease</Typography>\n        <form onSubmit={handleSubmit}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                name=\"title\"\n                label=\"Disease Title\"\n                value={values.title}\n                onChange={handleChange}\n                error={Boolean(touched.title && errors.title)}\n                helperText={touched.title && errors.title}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                multiline\n                rows={4}\n                name=\"description\"\n                label=\"Description\"\n                value={values.description}\n                onChange={handleChange}\n                error={Boolean(touched.description && errors.description)}\n                helperText={touched.description && errors.description}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Button type=\"submit\" variant=\"contained\">Add Disease</Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Card>\n    </Box>\n  );\n};\n\nexport default AddNewDisease;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}