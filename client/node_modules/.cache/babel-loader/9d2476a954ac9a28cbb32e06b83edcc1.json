{"ast":null,"code":"var _jsxFileName = \"/workspaces/v4/src/pages/diseases-dermatologie/disease-details.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Button, Typography, Grid, Divider } from \"@mui/material\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { DiseaseList } from \"./DiseaseList\";\nimport { ImageList } from \"../images-dermatologie/image-list\";\nimport ImageCard from \"../images-dermatologie/image-card\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DiseaseDetails = () => {\n  _s();\n  var _location$state;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const disease = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.disease;\n  const handleReturnClick = () => {\n    navigate(-1); // Navigate back to the previous page\n  };\n\n  // Find the selected disease details\n  const selectedDisease = DiseaseList.find(item => item.title === disease.title);\n\n  // Filter the images based on the selected disease id\n  const filteredImages = ImageList.filter(image => image.diseaseTitle === disease.title);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 3,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleReturnClick,\n      sx: {\n        mb: 3\n      },\n      children: \"Return\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), selectedDisease && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: selectedDisease.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        gutterBottom: true,\n        children: selectedDisease.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          my: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: filteredImages.map((image, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(ImageCard, {\n          image: image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(DiseaseDetails, \"VDZHUspDq9N5O9RWjniBrjgIdAA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = DiseaseDetails;\nexport default DiseaseDetails;\nvar _c;\n$RefreshReg$(_c, \"DiseaseDetails\");","map":{"version":3,"names":["Box","Button","Typography","Grid","Divider","useLocation","useNavigate","DiseaseList","ImageList","ImageCard","React","DiseaseDetails","navigate","location","disease","state","handleReturnClick","selectedDisease","find","item","title","filteredImages","filter","image","diseaseTitle","mb","description","my","map","index"],"sources":["/workspaces/v4/src/pages/diseases-dermatologie/disease-details.jsx"],"sourcesContent":["import { Box, Button, Typography, Grid, Divider } from \"@mui/material\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { DiseaseList } from \"./DiseaseList\";\nimport { ImageList } from \"../images-dermatologie/image-list\";\nimport ImageCard from \"../images-dermatologie/image-card\";\nimport React from \"react\";\n\nconst DiseaseDetails = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\nconst disease = location.state?.disease;\n\n  const handleReturnClick = () => {\n    navigate(-1); // Navigate back to the previous page\n  };\n\n  // Find the selected disease details\n  const selectedDisease = DiseaseList.find(item => item.title === disease.title);\n\n  // Filter the images based on the selected disease id\n  const filteredImages = ImageList.filter(image => image.diseaseTitle === disease.title);\n\n  return (\n    <Box p={3}>\n      <Button variant=\"contained\" onClick={handleReturnClick} sx={{ mb: 3 }}>\n        Return\n      </Button>\n      {selectedDisease && (\n        <>\n          <Typography variant=\"h4\" gutterBottom>\n            {selectedDisease.title}\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom>\n            {selectedDisease.description}\n          </Typography>\n          <Divider sx={{ my: 3 }} />\n        </>\n      )}\n      <Grid container spacing={3}>\n        {filteredImages.map((image, index) => (\n          <Grid item xs={12} sm={6} md={4} key={index}>\n            <ImageCard image={image} />\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default DiseaseDetails;\n"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,MAAM,EAAEC,UAAU,EAAEC,IAAI,EAAEC,OAAO,QAAQ,eAAe;AACtE,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,SAAS,QAAQ,mCAAmC;AAC7D,OAAOC,SAAS,MAAM,mCAAmC;AACzD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAAA;AAE1B,MAAMC,cAAc,GAAG,MAAM;EAAA;EAAA;EAC3B,MAAMC,QAAQ,GAAGN,WAAW,EAAE;EAC9B,MAAMO,QAAQ,GAAGR,WAAW,EAAE;EAChC,MAAMS,OAAO,sBAAGD,QAAQ,CAACE,KAAK,oDAAd,gBAAgBD,OAAO;EAErC,MAAME,iBAAiB,GAAG,MAAM;IAC9BJ,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC;;EAED;EACA,MAAMK,eAAe,GAAGV,WAAW,CAACW,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,KAAKN,OAAO,CAACM,KAAK,CAAC;;EAE9E;EACA,MAAMC,cAAc,GAAGb,SAAS,CAACc,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,YAAY,KAAKV,OAAO,CAACM,KAAK,CAAC;EAEtF,oBACE,QAAC,GAAG;IAAC,CAAC,EAAE,CAAE;IAAA,wBACR,QAAC,MAAM;MAAC,OAAO,EAAC,WAAW;MAAC,OAAO,EAAEJ,iBAAkB;MAAC,EAAE,EAAE;QAAES,EAAE,EAAE;MAAE,CAAE;MAAA,UAAC;IAEvE;MAAA;MAAA;MAAA;IAAA,QAAS,EACRR,eAAe,iBACd;MAAA,wBACE,QAAC,UAAU;QAAC,OAAO,EAAC,IAAI;QAAC,YAAY;QAAA,UAClCA,eAAe,CAACG;MAAK;QAAA;QAAA;QAAA;MAAA,QACX,eACb,QAAC,UAAU;QAAC,OAAO,EAAC,OAAO;QAAC,YAAY;QAAA,UACrCH,eAAe,CAACS;MAAW;QAAA;QAAA;QAAA;MAAA,QACjB,eACb,QAAC,OAAO;QAAC,EAAE,EAAE;UAAEC,EAAE,EAAE;QAAE;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA,gBAE7B,eACD,QAAC,IAAI;MAAC,SAAS;MAAC,OAAO,EAAE,CAAE;MAAA,UACxBN,cAAc,CAACO,GAAG,CAAC,CAACL,KAAK,EAAEM,KAAK,kBAC/B,QAAC,IAAI;QAAC,IAAI;QAAC,EAAE,EAAE,EAAG;QAAC,EAAE,EAAE,CAAE;QAAC,EAAE,EAAE,CAAE;QAAA,uBAC9B,QAAC,SAAS;UAAC,KAAK,EAAEN;QAAM;UAAA;UAAA;UAAA;QAAA;MAAG,GADSM,KAAK;QAAA;QAAA;QAAA;MAAA,QAG5C;IAAC;MAAA;MAAA;MAAA;IAAA,QACG;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,GAxCIlB,cAAc;EAAA,QACDL,WAAW,EACXD,WAAW;AAAA;AAAA,KAFxBM,cAAc;AA0CpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module"}