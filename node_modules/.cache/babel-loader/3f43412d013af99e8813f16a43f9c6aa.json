{"ast":null,"code":"var _jsxFileName = \"/workspaces/v4/src/theme/index.js\",\n  _s = $RefreshSig$();\nimport { createTheme, CssBaseline, ThemeProvider, responsiveFontSizes, StyledEngineProvider } from \"@mui/material\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport merge from \"lodash/merge\";\nimport RTL from \"components/RTL\";\nimport { shadows } from \"./shadows\";\nimport { THEMES } from \"../constants\";\nimport components from \"./components\";\nimport themesOptions from \"./themeOptions\";\nimport useSettings from \"hooks/useSettings\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseOptions = {\n  direction: \"ltr\",\n  typography: {\n    fontFamily: monserrat.style.fontFamily\n  },\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 600,\n      md: 900,\n      lg: 1200,\n      xl: 1536\n    }\n  }\n};\nconst createCustomTheme = settings => {\n  /**\n   * settings.theme value is 'light' or 'dark'\n   * update settings in contexts/settingsContext.tsx\n   */\n  let themeOption = themesOptions[settings.theme];\n  if (!themeOption) {\n    themeOption = themesOptions[THEMES.LIGHT];\n  }\n  const mergedThemeOptions = merge({}, baseOptions, themeOption, {\n    direction: settings.direction\n  });\n  let theme = createTheme(mergedThemeOptions); // set shadows\n\n  theme.shadows = shadows(theme); // set components\n\n  theme.components = components(theme);\n  if (settings.responsiveFontSizes) {\n    theme = responsiveFontSizes(theme);\n  }\n  return theme;\n};\nconst OctaviaTheme = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const {\n    settings\n  } = useSettings();\n  const theme = createCustomTheme({\n    theme: settings.theme,\n    direction: settings.direction,\n    responsiveFontSizes: settings.responsiveFontSizes\n  });\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDateFns,\n    children: /*#__PURE__*/_jsxDEV(StyledEngineProvider, {\n      injectFirst: true,\n      children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: /*#__PURE__*/_jsxDEV(RTL, {\n          children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), children]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 10\n  }, this);\n};\n_s(OctaviaTheme, \"L4tfCZ4EXwSNYbtgkxnNg5sNfnc=\", false, function () {\n  return [useSettings];\n});\n_c = OctaviaTheme;\nexport default OctaviaTheme;\nvar _c;\n$RefreshReg$(_c, \"OctaviaTheme\");","map":{"version":3,"names":["createTheme","CssBaseline","ThemeProvider","responsiveFontSizes","StyledEngineProvider","LocalizationProvider","AdapterDateFns","merge","RTL","shadows","THEMES","components","themesOptions","useSettings","baseOptions","direction","typography","fontFamily","monserrat","style","breakpoints","values","xs","sm","md","lg","xl","createCustomTheme","settings","themeOption","theme","LIGHT","mergedThemeOptions","OctaviaTheme","children"],"sources":["/workspaces/v4/src/theme/index.js"],"sourcesContent":["import { createTheme, CssBaseline, ThemeProvider, responsiveFontSizes, StyledEngineProvider } from \"@mui/material\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport merge from \"lodash/merge\";\nimport RTL from \"components/RTL\";\nimport { shadows } from \"./shadows\";\nimport { THEMES } from \"../constants\";\nimport components from \"./components\";\nimport themesOptions from \"./themeOptions\";\nimport useSettings from \"hooks/useSettings\";\n\nconst baseOptions = {\n  direction: \"ltr\",\n  typography: {\n    fontFamily: monserrat.style.fontFamily\n  },\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 600,\n      md: 900,\n      lg: 1200,\n      xl: 1536\n    }\n  }\n};\n\nconst createCustomTheme = settings => {\n  /**\n   * settings.theme value is 'light' or 'dark'\n   * update settings in contexts/settingsContext.tsx\n   */\n  let themeOption = themesOptions[settings.theme];\n\n  if (!themeOption) {\n    themeOption = themesOptions[THEMES.LIGHT];\n  }\n\n  const mergedThemeOptions = merge({}, baseOptions, themeOption, {\n    direction: settings.direction\n  });\n  let theme = createTheme(mergedThemeOptions); // set shadows\n\n  theme.shadows = shadows(theme); // set components\n\n  theme.components = components(theme);\n\n  if (settings.responsiveFontSizes) {\n    theme = responsiveFontSizes(theme);\n  }\n\n  return theme;\n};\n\nconst OctaviaTheme = ({\n  children\n}) => {\n  const {\n    settings\n  } = useSettings();\n  const theme = createCustomTheme({\n    theme: settings.theme,\n    direction: settings.direction,\n    responsiveFontSizes: settings.responsiveFontSizes\n  });\n  return <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <StyledEngineProvider injectFirst>\n        <ThemeProvider theme={theme}>\n          <RTL>\n            <CssBaseline />\n            {children}\n          </RTL>\n        </ThemeProvider>\n      </StyledEngineProvider>\n    </LocalizationProvider>;\n};\n\nexport default OctaviaTheme;"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,EAAEC,aAAa,EAAEC,mBAAmB,EAAEC,oBAAoB,QAAQ,eAAe;AAClH,SAASC,oBAAoB,QAAQ,0CAA0C;AAC/E,SAASC,cAAc,QAAQ,oCAAoC;AACnE,OAAOC,KAAK,MAAM,cAAc;AAChC,OAAOC,GAAG,MAAM,gBAAgB;AAChC,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,MAAM,QAAQ,cAAc;AACrC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,OAAOC,WAAW,MAAM,mBAAmB;AAAC;AAE5C,MAAMC,WAAW,GAAG;EAClBC,SAAS,EAAE,KAAK;EAChBC,UAAU,EAAE;IACVC,UAAU,EAAEC,SAAS,CAACC,KAAK,CAACF;EAC9B,CAAC;EACDG,WAAW,EAAE;IACXC,MAAM,EAAE;MACNC,EAAE,EAAE,CAAC;MACLC,EAAE,EAAE,GAAG;MACPC,EAAE,EAAE,GAAG;MACPC,EAAE,EAAE,IAAI;MACRC,EAAE,EAAE;IACN;EACF;AACF,CAAC;AAED,MAAMC,iBAAiB,GAAGC,QAAQ,IAAI;EACpC;AACF;AACA;AACA;EACE,IAAIC,WAAW,GAAGjB,aAAa,CAACgB,QAAQ,CAACE,KAAK,CAAC;EAE/C,IAAI,CAACD,WAAW,EAAE;IAChBA,WAAW,GAAGjB,aAAa,CAACF,MAAM,CAACqB,KAAK,CAAC;EAC3C;EAEA,MAAMC,kBAAkB,GAAGzB,KAAK,CAAC,CAAC,CAAC,EAAEO,WAAW,EAAEe,WAAW,EAAE;IAC7Dd,SAAS,EAAEa,QAAQ,CAACb;EACtB,CAAC,CAAC;EACF,IAAIe,KAAK,GAAG9B,WAAW,CAACgC,kBAAkB,CAAC,CAAC,CAAC;;EAE7CF,KAAK,CAACrB,OAAO,GAAGA,OAAO,CAACqB,KAAK,CAAC,CAAC,CAAC;;EAEhCA,KAAK,CAACnB,UAAU,GAAGA,UAAU,CAACmB,KAAK,CAAC;EAEpC,IAAIF,QAAQ,CAACzB,mBAAmB,EAAE;IAChC2B,KAAK,GAAG3B,mBAAmB,CAAC2B,KAAK,CAAC;EACpC;EAEA,OAAOA,KAAK;AACd,CAAC;AAED,MAAMG,YAAY,GAAG,QAEf;EAAA;EAAA,IAFgB;IACpBC;EACF,CAAC;EACC,MAAM;IACJN;EACF,CAAC,GAAGf,WAAW,EAAE;EACjB,MAAMiB,KAAK,GAAGH,iBAAiB,CAAC;IAC9BG,KAAK,EAAEF,QAAQ,CAACE,KAAK;IACrBf,SAAS,EAAEa,QAAQ,CAACb,SAAS;IAC7BZ,mBAAmB,EAAEyB,QAAQ,CAACzB;EAChC,CAAC,CAAC;EACF,oBAAO,QAAC,oBAAoB;IAAC,WAAW,EAAEG,cAAe;IAAA,uBACrD,QAAC,oBAAoB;MAAC,WAAW;MAAA,uBAC/B,QAAC,aAAa;QAAC,KAAK,EAAEwB,KAAM;QAAA,uBAC1B,QAAC,GAAG;UAAA,wBACF,QAAC,WAAW;YAAA;YAAA;YAAA;UAAA,QAAG,EACdI,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA;MACL;QAAA;QAAA;QAAA;MAAA;IACQ;MAAA;MAAA;MAAA;IAAA;EACK;IAAA;IAAA;IAAA;EAAA,QACF;AAC3B,CAAC;AAAC,GArBID,YAAY;EAAA,QAKZpB,WAAW;AAAA;AAAA,KALXoB,YAAY;AAuBlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module"}