{"ast":null,"code":"// import { Clear } from \"@mui/icons-material\";\n// import { Button, Divider, Drawer, IconButton, Box } from \"@mui/material\";\n// import { styled } from \"@mui/material/styles\";\n// import FlexBox from \"components/flexbox/FlexBox\";\n// import { H5 } from \"components/Typography\";\n// import useSettings from \"hooks/useSettings\";\n// import { Fragment, useState } from \"react\";\n// const CustomDrawer = styled(Drawer)(({\n//   theme\n// }) => ({\n//   flexShrink: 0,\n//   whiteSpace: \"nowrap\",\n//   boxSizing: \"border-box\",\n//   width: \"250px\",\n//   \"& .MuiPaper-root\": {\n//     transition: theme.transitions.create(\"width\", {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.enteringScreen\n//     }),\n//     overflow: \"initial\",\n//     width: \"250px\",\n//     boxShadow: theme.shadows[2]\n//   }\n// }));\n// const layoutName = {\n//   position: \"absolute\",\n//   display: \"flex\",\n//   justifyContent: \"center\",\n//   alignItems: \"center\",\n//   height: \"100%\",\n//   width: \"100%\",\n//   borderRadius: \"8px\",\n//   background: \"rgba(0,0,0,0.3)\",\n//   zIndex: 12\n// };\n// const LayoutBox = styled(Box)(({\n//   theme\n// }) => ({\n//   width: \"100%\",\n//   cursor: \"pointer\",\n//   overflow: \"hidden\",\n//   borderRadius: \"8px\",\n//   marginBottom: \"20px\",\n//   position: \"relative\",\n//   boxShadow: theme.shadows[1],\n//   \"& .layout-name\": {\n//     display: \"none\"\n//   },\n//   \"&:hover .layout-name\": layoutName,\n//   \"& .selected\": layoutName\n// }));\n\n// const LayoutSetting = () => {\n//   const [open, setOpen] = useState(false);\n//   const {\n//     settings,\n//     saveSettings\n//   } = useSettings();\n\n//   const changeLayout = value => {\n//     setOpen(false);\n//     saveSettings({ ...settings,\n//       activeLayout: value\n//     });\n//   };\n\n//   return <Fragment>\n//       <Button onClick={() => setOpen(true)} variant=\"outlined\" color=\"warning\" sx={{\n//       top: \"40%\",\n//       right: -40,\n//       height: \"30px\",\n//       position: \"fixed\",\n//       bgcolor: \"warning.main\",\n//       borderRadius: \"0 0 5px 5px\",\n//       transform: \"rotate(90deg)\",\n//       \"&:hover\": {\n//         bgcolor: \"warning.main\"\n//       }\n//     }}>\n//         Layouts\n//       </Button>\n\n//       <CustomDrawer open={open} elevation={3} anchor=\"right\" variant=\"persistent\">\n//         <FlexBox alignItems=\"center\" justifyContent=\"space-between\" p={2}>\n//           <H5>Available Layouts</H5>\n//           <IconButton onClick={() => setOpen(false)} size=\"small\" sx={{\n//           p: 0\n//         }}>\n//             <Clear />\n//           </IconButton>\n//         </FlexBox>\n\n//         <Divider />\n\n//         <FlexBox sx={{\n//         flexDirection: \"column\",\n//         p: \"20px\"\n//       }}>\n//           {demoLayouts.map(item => <LayoutBox key={item.name} onClick={() => changeLayout(item.name)}>\n//               <Box sx={{\n//             overflow: \"hidden\"\n//           }} className={settings.activeLayout === item.name ? \"layout-name selected\" : \"layout-name\"}>\n//                 <Button variant=\"contained\">{item.title}</Button>\n//               </Box>\n\n//               <img width=\"230px\" src={item.imgUrl} alt={item.name} />\n//             </LayoutBox>)}\n//         </FlexBox>\n//       </CustomDrawer>\n//     </Fragment>;\n// };\n\n// const demoLayouts = [{\n//   name: \"layout1\",\n//   title: \"Layout V1\",\n//   imgUrl: \"/static/layouts/layout-v1.png\"\n// }, {\n//   name: \"layout2\",\n//   title: \"Layout V2\",\n//   imgUrl: \"/static/layouts/layout-v2.png\"\n// }, {\n//   name: \"layout3\",\n//   title: \"Layout V3\",\n//   imgUrl: \"/static/layouts/layout-v3.png\"\n// }];\n// export default LayoutSetting;","map":{"version":3,"names":[],"sources":["/workspaces/v4/src/layouts/layout-parts/LayoutSetting.jsx"],"sourcesContent":["// import { Clear } from \"@mui/icons-material\";\n// import { Button, Divider, Drawer, IconButton, Box } from \"@mui/material\";\n// import { styled } from \"@mui/material/styles\";\n// import FlexBox from \"components/flexbox/FlexBox\";\n// import { H5 } from \"components/Typography\";\n// import useSettings from \"hooks/useSettings\";\n// import { Fragment, useState } from \"react\";\n// const CustomDrawer = styled(Drawer)(({\n//   theme\n// }) => ({\n//   flexShrink: 0,\n//   whiteSpace: \"nowrap\",\n//   boxSizing: \"border-box\",\n//   width: \"250px\",\n//   \"& .MuiPaper-root\": {\n//     transition: theme.transitions.create(\"width\", {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.enteringScreen\n//     }),\n//     overflow: \"initial\",\n//     width: \"250px\",\n//     boxShadow: theme.shadows[2]\n//   }\n// }));\n// const layoutName = {\n//   position: \"absolute\",\n//   display: \"flex\",\n//   justifyContent: \"center\",\n//   alignItems: \"center\",\n//   height: \"100%\",\n//   width: \"100%\",\n//   borderRadius: \"8px\",\n//   background: \"rgba(0,0,0,0.3)\",\n//   zIndex: 12\n// };\n// const LayoutBox = styled(Box)(({\n//   theme\n// }) => ({\n//   width: \"100%\",\n//   cursor: \"pointer\",\n//   overflow: \"hidden\",\n//   borderRadius: \"8px\",\n//   marginBottom: \"20px\",\n//   position: \"relative\",\n//   boxShadow: theme.shadows[1],\n//   \"& .layout-name\": {\n//     display: \"none\"\n//   },\n//   \"&:hover .layout-name\": layoutName,\n//   \"& .selected\": layoutName\n// }));\n\n// const LayoutSetting = () => {\n//   const [open, setOpen] = useState(false);\n//   const {\n//     settings,\n//     saveSettings\n//   } = useSettings();\n\n//   const changeLayout = value => {\n//     setOpen(false);\n//     saveSettings({ ...settings,\n//       activeLayout: value\n//     });\n//   };\n\n//   return <Fragment>\n//       <Button onClick={() => setOpen(true)} variant=\"outlined\" color=\"warning\" sx={{\n//       top: \"40%\",\n//       right: -40,\n//       height: \"30px\",\n//       position: \"fixed\",\n//       bgcolor: \"warning.main\",\n//       borderRadius: \"0 0 5px 5px\",\n//       transform: \"rotate(90deg)\",\n//       \"&:hover\": {\n//         bgcolor: \"warning.main\"\n//       }\n//     }}>\n//         Layouts\n//       </Button>\n\n//       <CustomDrawer open={open} elevation={3} anchor=\"right\" variant=\"persistent\">\n//         <FlexBox alignItems=\"center\" justifyContent=\"space-between\" p={2}>\n//           <H5>Available Layouts</H5>\n//           <IconButton onClick={() => setOpen(false)} size=\"small\" sx={{\n//           p: 0\n//         }}>\n//             <Clear />\n//           </IconButton>\n//         </FlexBox>\n\n//         <Divider />\n\n//         <FlexBox sx={{\n//         flexDirection: \"column\",\n//         p: \"20px\"\n//       }}>\n//           {demoLayouts.map(item => <LayoutBox key={item.name} onClick={() => changeLayout(item.name)}>\n//               <Box sx={{\n//             overflow: \"hidden\"\n//           }} className={settings.activeLayout === item.name ? \"layout-name selected\" : \"layout-name\"}>\n//                 <Button variant=\"contained\">{item.title}</Button>\n//               </Box>\n\n//               <img width=\"230px\" src={item.imgUrl} alt={item.name} />\n//             </LayoutBox>)}\n//         </FlexBox>\n//       </CustomDrawer>\n//     </Fragment>;\n// };\n\n// const demoLayouts = [{\n//   name: \"layout1\",\n//   title: \"Layout V1\",\n//   imgUrl: \"/static/layouts/layout-v1.png\"\n// }, {\n//   name: \"layout2\",\n//   title: \"Layout V2\",\n//   imgUrl: \"/static/layouts/layout-v2.png\"\n// }, {\n//   name: \"layout3\",\n//   title: \"Layout V3\",\n//   imgUrl: \"/static/layouts/layout-v3.png\"\n// }];\n// export default LayoutSetting;"],"mappings},"metadata":{},"sourceType":"module"}